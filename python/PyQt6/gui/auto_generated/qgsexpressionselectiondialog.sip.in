/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/gui/qgsexpressionselectiondialog.h                               *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.py again   *
 ************************************************************************/





class QgsExpressionSelectionDialog : QDialog
{
%Docstring(signature="appended")
This class offers a dialog to change feature selections.
To do so, a :py:class:`QgsExpressionBuilderWidget` is shown in a dialog.
It offers the possibilities to create a new selection, add to the current selection
remove from the current selection or select within the current selection.
%End

%TypeHeaderCode
#include "qgsexpressionselectiondialog.h"
%End
  public:

    QgsExpressionSelectionDialog( QgsVectorLayer *layer, const QString &startText = QString(), QWidget *parent /TransferThis/ = 0 );
%Docstring
Creates a new selection dialog.

:param layer: The layer on which the selection is to be performed.
:param startText: A default expression text to be applied (Defaults to empty)
:param parent: parent object (owner)
%End

    QgsExpressionBuilderWidget *expressionBuilder();
%Docstring
The builder widget that is used by the dialog

:return: The builder widget that is used by the dialog
%End

    void setExpressionText( const QString &text );
%Docstring
Sets the current expression text

:param text: the expression text to set
%End

    QString expressionText();
%Docstring
Returns the current expression text

:return: The expression text
%End

    void setGeomCalculator( const QgsDistanceArea &da );
%Docstring
Sets geometry calculator used in distance/area calculations.
%End

    void setMessageBar( QgsMessageBar *messageBar );
%Docstring
Sets the message bar to display feedback from the dialog. This is used when zooming to
features to display the count of selected features.

:param messageBar: target message bar
%End

    void setMapCanvas( QgsMapCanvas *canvas );
%Docstring
Sets a map canvas associated with the dialog.
%End

  protected:

    virtual void closeEvent( QCloseEvent *closeEvent );

%Docstring
Implementation for closeEvent
Saves the window geometry

:param closeEvent: Event object. Unused.
%End

    virtual void done( int r );

%Docstring
Implementation for done (default behavior when pressing esc)
Calls close, so the window geometry gets saved and the object deleted.

:param r: Result value. Unused.
%End

};

/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/gui/qgsexpressionselectiondialog.h                               *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.py again   *
 ************************************************************************/
