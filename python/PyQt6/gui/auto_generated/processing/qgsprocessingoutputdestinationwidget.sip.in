/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/gui/processing/qgsprocessingoutputdestinationwidget.h            *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.py again   *
 ************************************************************************/




class QgsProcessingLayerOutputDestinationWidget : QWidget
{
%Docstring(signature="appended")
A widget which allows users to select the destination path for an output style Processing parameter.

.. note::

   Not stable API

.. versionadded:: 3.14
%End

%TypeHeaderCode
#include "qgsprocessingoutputdestinationwidget.h"
%End
  public:

    QgsProcessingLayerOutputDestinationWidget( const QgsProcessingDestinationParameter *parameter, bool defaultSelection, QWidget *parent /TransferThis/ = 0 );
%Docstring
Constructor for QgsProcessingLayerOutputDestinationWidget, associated with the specified ``parameter``.
%End

    bool outputIsSkipped() const;
%Docstring
Returns ``True`` if the output is set to be skipped.
%End

    void setValue( const QVariant &value );
%Docstring
Sets the ``value`` to show in the widget.
%End

    QVariant value() const;
%Docstring
Returns the widgets current value.
%End

    void setWidgetContext( const QgsProcessingParameterWidgetContext &context );
%Docstring
Sets the ``context`` in which the widget is shown, e.g., the
parent model algorithm, a linked map canvas, and other relevant information which allows the widget
to fine-tune its behavior.
%End

    void setContext( QgsProcessingContext *context );
%Docstring
Sets the processing ``context`` in which this widget is being shown.
%End

    void registerProcessingParametersGenerator( QgsProcessingParametersGenerator *generator );
%Docstring
Registers a Processing parameters ``generator`` class that will be used to retrieve
algorithm parameters for the widget when required.

.. versionadded:: 3.14
%End

    void addOpenAfterRunningOption();
%Docstring
Adds the "Open output file after running" option to the widget.
%End

    bool openAfterRunning() const;
%Docstring
Returns ``True`` if the widget has the "Open output file after running" option checked.
%End

  signals:

    void skipOutputChanged( bool skipped );
%Docstring
Emitted whenever the "skip output" option is toggled in the widget.
%End

    void destinationChanged();
%Docstring
Emitted whenever the destination value is changed in the widget.
%End
  protected:

    virtual void dragEnterEvent( QDragEnterEvent *event );

    virtual void dragLeaveEvent( QDragLeaveEvent *event );

    virtual void dropEvent( QDropEvent *event );


};


/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/gui/processing/qgsprocessingoutputdestinationwidget.h            *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.py again   *
 ************************************************************************/
