/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/gui/elevation/qgselevationcontrollerwidget.h                     *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/







class QgsElevationControllerSettingsAction: QWidgetAction
{

%TypeHeaderCode
#include "qgselevationcontrollerwidget.h"
%End
  public:

    QgsElevationControllerSettingsAction( QWidget *parent = 0 );

    QgsDoubleSpinBox *sizeSpin();

};



class QgsElevationControllerWidget : QWidget
{
%Docstring(signature="appended")
A widget for configuring vertical elevation slicing behavior for maps.

.. versionadded:: 3.38
%End

%TypeHeaderCode
#include "qgselevationcontrollerwidget.h"
%End
%ConvertToSubClassCode
    if ( qobject_cast<QgsElevationControllerWidget *>( sipCpp ) != nullptr )
      sipType = sipType_QgsElevationControllerWidget;
    else
      sipType = nullptr;
%End
  public:

    QgsElevationControllerWidget( QWidget *parent /TransferThis/ = 0 );
%Docstring
Constructor for QgsElevationControllerWidget, with the specified ``parent`` widget.
%End

    virtual void resizeEvent( QResizeEvent *event );


    QgsDoubleRange range() const;
%Docstring
Returns the current visible range from the widget.

.. seealso:: :py:func:`setRange`

.. seealso:: :py:func:`rangeChanged`
%End

    QgsDoubleRange rangeLimits() const;
%Docstring
Returns the limits of the elevation range which can be selected by the widget.

.. seealso:: :py:func:`rangeLimits`
%End

    QgsRangeSlider *slider();
%Docstring
Returns a reference to the slider component of the widget.
%End

    QMenu *menu();
%Docstring
Returns a reference to the widget's configuration menu, which can be used
to add actions to the menu.
%End

    double fixedRangeSize() const;
%Docstring
Returns the fixed range size, or -1 if no fixed size is set.

A fixed size forces the selected elevation range to have a matching difference between
the upper and lower elevation.

.. seealso:: :py:func:`setFixedRangeSize`
%End

  public slots:

    void setRange( const QgsDoubleRange &range );
%Docstring
Sets the current visible ``range`` for the widget.

.. seealso:: :py:func:`range`

.. seealso:: :py:func:`rangeChanged`
%End

    void setRangeLimits( const QgsDoubleRange &limits );
%Docstring
Sets the limits of the elevation range which can be selected by the widget.

.. seealso:: :py:func:`rangeLimits`
%End

    void setFixedRangeSize( double size );
%Docstring
Sets the fixed range ``size``. Set to -1 if no fixed size is desired.

A fixed size forces the selected elevation range to have a matching difference between
the upper and lower elevation.

.. seealso:: :py:func:`fixedRangeSize`

.. seealso:: :py:func:`fixedRangeSizeChanged`
%End

    void setInverted( bool inverted );
%Docstring
Sets whether the elevation slider should be inverted.

.. seealso:: :py:func:`invertedChanged`
%End

    void setSignificantElevations( const QList< double > &elevations );
%Docstring
Sets a list of significant ``elevations`` to highlight in the widget.
%End

  signals:

    void rangeChanged( const QgsDoubleRange &range );
%Docstring
Emitted when the visible range from the widget is changed.

.. seealso:: :py:func:`setRange`

.. seealso:: :py:func:`range`
%End

    void fixedRangeSizeChanged( double size );
%Docstring
Emitted when the fixed range size is changed from the widget.

.. seealso:: :py:func:`fixedRangeSize`

.. seealso:: :py:func:`setFixedRangeSize`
%End

    void invertedChanged( bool inverted );
%Docstring
Emitted when the elevation filter slider is inverted.

.. seealso:: :py:func:`setInverted`
%End

};

/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/gui/elevation/qgselevationcontrollerwidget.h                     *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/
