/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/3d/qgslayoutitem3dmap.h                                          *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.py again   *
 ************************************************************************/




// this is needed for the "convert to subclass" code below to compile
%ModuleHeaderCode
#include "qgslayoutitem3dmap.h"
%End



class QgsLayoutItem3DMap : QgsLayoutItem, QgsTemporalRangeObject
{
%Docstring(signature="appended")

Implements support of 3D map views in print layouts

.. versionadded:: 3.4
%End

%TypeHeaderCode
#include "qgslayoutitem3dmap.h"
%End
%ConvertToSubClassCode
    // the conversions have to be static, because they're using multiple inheritance
    // (seen in PyQt4 .sip files for some QGraphicsItem classes)
    switch ( sipCpp->type() )
    {
      // really, these *should* use the constants from QgsLayoutItemRegistry, but sip doesn't like that!
      case QGraphicsItem::UserType + 115:
        sipType = sipType_QgsLayoutItem3DMap;
        *sipCppRet = static_cast<QgsLayoutItem3DMap *>( sipCpp );
        break;
      default:
        sipType = 0;
    }
%End
  public:

    QgsLayoutItem3DMap( QgsLayout *layout /TransferThis/ );
%Docstring
Constructor for QgsLayoutItem3DMap, with the specified parent ``layout``.

Ownership is transferred to the layout.
%End

    ~QgsLayoutItem3DMap();

    static QgsLayoutItem3DMap *create( QgsLayout *layout ) /Factory/;
%Docstring
Returns a new 3D map item for the specified ``layout``.

The caller takes responsibility for deleting the returned object.
%End

    virtual int type() const;
    virtual QIcon icon() const;


    void setCameraPose( const QgsCameraPose &pose );
%Docstring
Configures camera view
%End
    QgsCameraPose cameraPose() const;
%Docstring
Returns camera view
%End

    void setMapSettings( Qgs3DMapSettings *settings /Transfer/ );
%Docstring
Configures map scene

Ownership is transferred to the item.
%End
    Qgs3DMapSettings *mapSettings() const;
%Docstring
Returns map scene. May be ``None`` if not yet configured.
%End

    void assignFreeId();
%Docstring
Sets the map :py:func:`~QgsLayoutItem3DMap.id` to a number not yet used in the layout. The existing :py:func:`~QgsLayoutItem3DMap.id` is kept if it is not in use.
%End

    virtual QString displayName() const;

%Docstring
overridden to show "3D Map 1" type names
%End

    virtual void finalizeRestoreFromXml();


  public slots:
    virtual void refresh();


  protected:
    virtual void draw( QgsLayoutItemRenderContext &context );

    virtual bool writePropertiesToElement( QDomElement &element, QDomDocument &document, const QgsReadWriteContext &context ) const;

    virtual bool readPropertiesFromElement( const QDomElement &element, const QDomDocument &document, const QgsReadWriteContext &context );


};

/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/3d/qgslayoutitem3dmap.h                                          *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.py again   *
 ************************************************************************/
