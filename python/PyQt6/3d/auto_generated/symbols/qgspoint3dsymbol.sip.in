/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/3d/symbols/qgspoint3dsymbol.h                                    *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/






class QgsPoint3DSymbol : QgsAbstract3DSymbol /NoDefaultCtors/
{
%Docstring(signature="appended")
3D symbol that draws point geometries as 3D objects using one of the predefined shapes.

.. warning::

   This is not considered stable API, and may change in future QGIS releases. It is
   exposed to the Python bindings as a tech preview only.
%End

%TypeHeaderCode
#include "qgspoint3dsymbol.h"
%End
  public:
    QgsPoint3DSymbol();
%Docstring
Constructor for QgsPoint3DSymbol with default QgsMarkerSymbol as the billboardSymbol
%End

    QgsPoint3DSymbol( const QgsPoint3DSymbol &other );

    ~QgsPoint3DSymbol();

    static QgsAbstract3DSymbol *create() /Factory/;
%Docstring
Creates a new QgsPoint3DSymbol.

Caller takes ownership of the returned symbol.
%End

    virtual QString type() const;
    virtual QgsAbstract3DSymbol *clone() const /Factory/;


    virtual void writeXml( QDomElement &elem, const QgsReadWriteContext &context ) const;

    virtual void readXml( const QDomElement &elem, const QgsReadWriteContext &context );

    virtual QList< Qgis::GeometryType > compatibleGeometryTypes() const;

    virtual void setDefaultPropertiesFromLayer( const QgsVectorLayer *layer );


    Qgis::AltitudeClamping altitudeClamping() const;
%Docstring
Returns method that determines altitude (whether to clamp to feature to terrain)
%End
    void setAltitudeClamping( Qgis::AltitudeClamping altClamping );
%Docstring
Sets method that determines altitude (whether to clamp to feature to terrain)
%End

    QgsAbstractMaterialSettings *materialSettings() const;
%Docstring
Returns material settings used for shading of the symbol
%End

    void setMaterialSettings( QgsAbstractMaterialSettings *materialSettings /Transfer/ );
%Docstring
Sets the ``material`` settings used for shading of the symbol.

Ownership of ``material`` is transferred to the symbol.
%End

    static Qgis::Point3DShape shapeFromString( const QString &shape );
%Docstring
Returns shape enum value from a string
%End
    static QString shapeToString( Qgis::Point3DShape shape );
%Docstring
Returns string from a shape enum value
%End

    Qgis::Point3DShape shape() const;
%Docstring
Returns 3D shape for points
%End
    void setShape( Qgis::Point3DShape shape );
%Docstring
Sets 3D shape for points
%End

    QVariantMap shapeProperties() const;
%Docstring
Returns a key-value dictionary of point shape properties.

In most cases callers should use :py:func:`~QgsPoint3DSymbol.shapeProperty` instead, to
correctly handle default values when a property has not been
explicitly set.

.. seealso:: :py:func:`shapeProperty`
%End

    QVariant shapeProperty( const QString &property ) const;
%Docstring
Returns the value for a specific shape ``property``.

This method accounts for default property values for the symbol's :py:func:`~QgsPoint3DSymbol.shape`,
used when the property has not been explicitly set.

.. versionadded:: 3.36
%End

    void setShapeProperties( const QVariantMap &properties );
%Docstring
Sets a key-value dictionary of point shape properties
%End

    QgsMarkerSymbol *billboardSymbol() const;
%Docstring
Returns a symbol for billboard
%End
    void setBillboardSymbol( QgsMarkerSymbol *symbol );
%Docstring
Set symbol for billboard and the ownership is transferred
%End

    QMatrix4x4 transform() const;
%Docstring
Returns transform for individual objects represented by the symbol
%End
    void setTransform( const QMatrix4x4 &transform );
%Docstring
Sets transform for individual objects represented by the symbol
%End

    QMatrix4x4 billboardTransform() const;
%Docstring
Returns transform for billboards
%End

  private:
    QgsPoint3DSymbol &operator=( const QgsPoint3DSymbol & );
};


/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/3d/symbols/qgspoint3dsymbol.h                                    *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/
