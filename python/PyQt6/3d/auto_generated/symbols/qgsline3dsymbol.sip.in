/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/3d/symbols/qgsline3dsymbol.h                                     *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.py again   *
 ************************************************************************/





class QgsLine3DSymbol : QgsAbstract3DSymbol /NoDefaultCtors/
{
%Docstring(signature="appended")
3D symbol that draws linestring geometries as planar polygons (created from lines using a buffer with given thickness).

.. warning::

   This is not considered stable API, and may change in future QGIS releases. It is
   exposed to the Python bindings as a tech preview only.
%End

%TypeHeaderCode
#include "qgsline3dsymbol.h"
%End
  public:

    QgsLine3DSymbol();
    ~QgsLine3DSymbol();

    static QgsAbstract3DSymbol *create() /Factory/;
%Docstring
Creates a new QgsLine3DSymbol.

Caller takes ownership of the returned symbol.
%End

    virtual QString type() const;
    virtual QgsAbstract3DSymbol *clone() const /Factory/;


    virtual void writeXml( QDomElement &elem, const QgsReadWriteContext &context ) const;

    virtual void readXml( const QDomElement &elem, const QgsReadWriteContext &context );

    virtual QList< Qgis::GeometryType > compatibleGeometryTypes() const;

    virtual void setDefaultPropertiesFromLayer( const QgsVectorLayer *layer );


    Qgis::AltitudeClamping altitudeClamping() const;
%Docstring
Returns method that determines altitude (whether to clamp to feature to terrain)
%End
    void setAltitudeClamping( Qgis::AltitudeClamping altClamping );
%Docstring
Sets method that determines altitude (whether to clamp to feature to terrain)
%End

    Qgis::AltitudeBinding altitudeBinding() const;
%Docstring
Returns method that determines how altitude is bound to individual vertices
%End
    void setAltitudeBinding( Qgis::AltitudeBinding altBinding );
%Docstring
Sets method that determines how altitude is bound to individual vertices
%End

    float width() const;
%Docstring
Returns width of the line symbol (in map units)
%End
    void setWidth( float width );
%Docstring
Sets width of the line symbol (in map units)
%End

 float height() const /Deprecated/;
%Docstring
Returns height (altitude) of the symbol (in map units)

.. deprecated:: 3.36

   Use :py:func:`~QgsLine3DSymbol.offset` instead.
%End

 void setHeight( float height ) /Deprecated/;
%Docstring
Sets height (altitude) of the symbol (in map units)

.. deprecated:: 3.36

   Use :py:func:`~QgsLine3DSymbol.setOffset` instead.
%End

    float offset() const;
%Docstring
Returns vertical offset of the symbol (in map units)

.. versionadded:: 3.36
%End

    void setOffset( float offset );
%Docstring
Sets vertical offset of the symbol (in map units)

.. versionadded:: 3.36
%End

    float extrusionHeight() const;
%Docstring
Returns extrusion height (in map units)
%End
    void setExtrusionHeight( float extrusionHeight );
%Docstring
Sets extrusion height (in map units)
%End

    bool renderAsSimpleLines() const;
%Docstring
Returns whether the renderer will render data with simple lines (otherwise it uses buffer)
%End
    void setRenderAsSimpleLines( bool enabled );
%Docstring
Sets whether the renderer will render data with simple lines (otherwise it uses buffer)
%End

    QgsAbstractMaterialSettings *materialSettings() const;
%Docstring
Returns material settings used for shading of the symbol
%End

    void setMaterialSettings( QgsAbstractMaterialSettings *materialSettings /Transfer/ );
%Docstring
Sets the ``material`` settings used for shading of the symbol.

Ownership of ``material`` is transferred to the symbol.
%End


};


/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/3d/symbols/qgsline3dsymbol.h                                     *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.py again   *
 ************************************************************************/
