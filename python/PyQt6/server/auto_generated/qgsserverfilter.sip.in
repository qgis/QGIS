/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/server/qgsserverfilter.h                                         *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.py again   *
 ************************************************************************/







class QgsServerFilter
{
%Docstring(signature="appended")
Class defining I/O filters for QGIS Server and
implemented in plugins.

Filters can define any (or none) of the following hooks:

- :py:func:`~requestReady` - called when request is ready
- :py:func:`~responseComplete` - called when the response is complete after core services have returned to main loop
- :py:func:`~sendResponse` - called just before sending output to FGCI
%End

%TypeHeaderCode
#include "qgsserverfilter.h"
%End
  public:

    QgsServerFilter( QgsServerInterface *serverInterface );
%Docstring
Constructor
:py:class:`QgsServerInterface` passed to plugins constructors
and must be passed to QgsServerFilter instances.
%End

    virtual ~QgsServerFilter();

    QgsServerInterface *serverInterface();
%Docstring
Returns the :py:class:`QgsServerInterface` instance
%End

 virtual void requestReady() /Deprecated/;
%Docstring
Method called when the :py:class:`QgsRequestHandler` is ready and populated with
parameters, just before entering the main switch for core services.

This method is considered as deprecated and :py:func:`onRequestReady` should
be used instead.

.. deprecated:: 3.40

   Will be removed in QGIS 4.0.
%End

 virtual void responseComplete() /Deprecated/;
%Docstring
Method called when the :py:class:`QgsRequestHandler` processing has done and
the response is ready, just after the main switch for core services
and before final sending response.

This method is considered as deprecated and :py:func:`onResponseComplete` should
be used instead.

.. deprecated:: 3.40

   Will be removed in QGIS 4.0.
%End

 virtual void sendResponse() /Deprecated/;
%Docstring
Method called when the :py:class:`QgsRequestHandler` sends its data to FCGI stdout.
This normally occurs at the end of core services processing just after
the :py:func:`~QgsServerFilter.responseComplete` plugin hook. For streaming services (like WFS on
getFeature requests, :py:func:`~QgsServerFilter.sendResponse` might have been called several times
before the response is complete: in this particular case, :py:func:`~QgsServerFilter.sendResponse`
is called once for each feature before hitting :py:func:`~QgsServerFilter.responseComplete`

This method is considered as deprecated and :py:func:`onSendResponse` should
be used instead.

.. deprecated:: 3.40

   Will be removed in QGIS 4.0.
%End

    virtual bool onRequestReady();
%Docstring
Method called when the :py:class:`QgsRequestHandler` is ready and populated with
parameters, just before entering the main switch for core services.

:return: true if the call must propagate to the subsequent filters, false otherwise

.. versionadded:: 3.24
%End

    virtual bool onProjectReady();
%Docstring
Method called when the :py:class:`QgsProject` instance is ready to be used to perform the request,
just before entering the main switch for core services.

:return: true if the call must propagate to the subsequent filters, false otherwise

.. versionadded:: 3.36
%End

    virtual bool onResponseComplete();
%Docstring
Method called when the :py:class:`QgsRequestHandler` processing has done and
the response is ready, just after the main switch for core services
and before final sending response to FCGI stdout.

:return: true if the call must propagate to the subsequent filters, false otherwise

.. versionadded:: 3.24
%End

    virtual bool onSendResponse();
%Docstring
Method called when the :py:class:`QgsRequestHandler` sends its data to FCGI stdout.
This normally occurs at the end of core services processing just after
the :py:func:`~QgsServerFilter.responseComplete` plugin hook. For streaming services (like WFS on
getFeature requests, :py:func:`~QgsServerFilter.sendResponse` might have been called several times
before the response is complete: in this particular case, :py:func:`~QgsServerFilter.sendResponse`
is called once for each feature before hitting :py:func:`~QgsServerFilter.responseComplete`

:return: true if the call must propagate to the subsequent filters, false otherwise

.. versionadded:: 3.22
%End



};

typedef QMultiMap<int, QgsServerFilter *> QgsServerFiltersMap;

/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/server/qgsserverfilter.h                                         *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.py again   *
 ************************************************************************/
