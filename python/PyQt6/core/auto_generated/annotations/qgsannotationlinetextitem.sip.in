/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/annotations/qgsannotationlinetextitem.h                     *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/





class QgsAnnotationLineTextItem : QgsAnnotationItem
{
%Docstring(signature="appended")
An annotation item which renders text along a line geometry.

.. versionadded:: 3.32
%End

%TypeHeaderCode
#include "qgsannotationlinetextitem.h"
%End
  public:

    QgsAnnotationLineTextItem( const QString &text, QgsCurve *curve /Transfer/ );
%Docstring
Constructor for QgsAnnotationLineTextItem, with the specified ``curve`` and ``text``.
%End
    ~QgsAnnotationLineTextItem();

    virtual Qgis::AnnotationItemFlags flags() const;

    virtual QString type() const;

    virtual void render( QgsRenderContext &context, QgsFeedback *feedback );

    virtual bool writeXml( QDomElement &element, QDomDocument &document, const QgsReadWriteContext &context ) const;

    virtual QList< QgsAnnotationItemNode > nodesV2( const QgsAnnotationItemEditContext &context ) const;

    virtual Qgis::AnnotationItemEditOperationResult applyEditV2( QgsAbstractAnnotationItemEditOperation *operation, const QgsAnnotationItemEditContext &context );

    virtual QgsAnnotationItemEditOperationTransientResults *transientEditResultsV2( QgsAbstractAnnotationItemEditOperation *operation, const QgsAnnotationItemEditContext &context ) /Factory/;


    static QgsAnnotationLineTextItem *create() /Factory/;
%Docstring
Creates a new linestring annotation item.
%End

    virtual bool readXml( const QDomElement &element, const QgsReadWriteContext &context );

    virtual QgsRectangle boundingBox() const;

    virtual QgsRectangle boundingBox( QgsRenderContext &context ) const;


    virtual QgsAnnotationLineTextItem *clone() const /Factory/;


    const QgsCurve *geometry() const;
%Docstring
Returns the geometry of the item.

The coordinate reference system for the line will be the parent layer's :py:func:`QgsAnnotationLayer.crs()`.

.. seealso:: :py:func:`setGeometry`
%End

    void setGeometry( QgsCurve *geometry /Transfer/ );
%Docstring
Sets the ``geometry`` of the item. Ownership of ``geometry`` is transferred.

The coordinate reference system for the line will be the parent layer's :py:func:`QgsAnnotationLayer.crs()`.

.. seealso:: :py:func:`geometry`
%End

    QString text() const;
%Docstring
Returns the text rendered by the item.

.. seealso:: :py:func:`setText`
%End

    void setText( const QString &text );
%Docstring
Sets the ``text`` rendered by the item.

.. seealso:: :py:func:`text`
%End

    QgsTextFormat format() const;
%Docstring
Returns the text format used to render the text.

.. seealso:: :py:func:`setFormat`
%End

    void setFormat( const QgsTextFormat &format );
%Docstring
Sets the text ``format`` used to render the text.

.. seealso:: :py:func:`format`
%End

    double offsetFromLine() const;
%Docstring
Returns the offset distance from the line :py:func:`~QgsAnnotationLineTextItem.geometry` to the text's baseline. Units are specified through :py:func:`~QgsAnnotationLineTextItem.offsetFromLineUnit`.

.. seealso:: :py:func:`setOffsetFromLine`

.. seealso:: :py:func:`offsetFromLineUnit`
%End

    void setOffsetFromLine( double distance );
%Docstring
Sets the offset ``distance`` from the line :py:func:`~QgsAnnotationLineTextItem.geometry` to the text's baseline. Units are specified through :py:func:`~QgsAnnotationLineTextItem.setOffsetFromLineUnit`.

.. seealso:: :py:func:`offsetFromLine`

.. seealso:: :py:func:`setOffsetFromLineUnit`
%End

    void setOffsetFromLineUnit( Qgis::RenderUnit unit );
%Docstring
Sets the ``unit`` for the offset from line :py:func:`~QgsAnnotationLineTextItem.geometry` distance.

.. seealso:: :py:func:`offsetFromLineUnit`

.. seealso:: :py:func:`setOffsetFromLine`
%End

    Qgis::RenderUnit offsetFromLineUnit() const;
%Docstring
Returns the units for the offset from line :py:func:`~QgsAnnotationLineTextItem.geometry` distance.

.. seealso:: :py:func:`setOffsetFromLineUnit`

.. seealso:: :py:func:`offsetFromLine`
%End

    void setOffsetFromLineMapUnitScale( const QgsMapUnitScale &scale );
%Docstring
Sets the map unit ``scale`` for the offset from line :py:func:`~QgsAnnotationLineTextItem.geometry` distance.

.. seealso:: :py:func:`offsetFromLineMapUnitScale`

.. seealso:: :py:func:`setOffsetFromLineUnit`

.. seealso:: :py:func:`setOffsetFromLine`
%End

    const QgsMapUnitScale &offsetFromLineMapUnitScale() const;
%Docstring
Returns the map unit scale for the offset from line :py:func:`~QgsAnnotationLineTextItem.geometry` distance.

.. seealso:: :py:func:`setOffsetFromLineMapUnitScale`

.. seealso:: :py:func:`offsetFromLineUnit`

.. seealso:: :py:func:`offsetFromLine`
%End

  private:
    QgsAnnotationLineTextItem( const QgsAnnotationLineTextItem &other );
};

/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/annotations/qgsannotationlinetextitem.h                     *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/
