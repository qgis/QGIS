/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/annotations/qgsannotationpolygonitem.h                      *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/





class QgsAnnotationPolygonItem : QgsAnnotationItem
{
%Docstring(signature="appended")
An annotation item which renders a fill symbol for a polygon geometry.

.. versionadded:: 3.16
%End

%TypeHeaderCode
#include "qgsannotationpolygonitem.h"
%End
  public:

    QgsAnnotationPolygonItem( QgsCurvePolygon *polygon /Transfer/ );
%Docstring
Constructor for QgsAnnotationPolygonItem, with the specified ``polygon`` geometry.
%End
    ~QgsAnnotationPolygonItem();

    virtual QString type() const;

    virtual void render( QgsRenderContext &context, QgsFeedback *feedback );

    virtual bool writeXml( QDomElement &element, QDomDocument &document, const QgsReadWriteContext &context ) const;

    virtual QList< QgsAnnotationItemNode > nodesV2( const QgsAnnotationItemEditContext &context ) const;

    virtual Qgis::AnnotationItemEditOperationResult applyEditV2( QgsAbstractAnnotationItemEditOperation *operation, const QgsAnnotationItemEditContext &context );

    virtual QgsAnnotationItemEditOperationTransientResults *transientEditResultsV2( QgsAbstractAnnotationItemEditOperation *operation, const QgsAnnotationItemEditContext &context ) /Factory/;

    virtual Qgis::AnnotationItemFlags flags() const;


    static QgsAnnotationPolygonItem *create() /Factory/;
%Docstring
Creates a new polygon annotation item.
%End

    virtual bool readXml( const QDomElement &element, const QgsReadWriteContext &context );

    virtual QgsAnnotationPolygonItem *clone() const /Factory/;

    virtual QgsRectangle boundingBox() const;


    const QgsCurvePolygon *geometry() const;
%Docstring
Returns the geometry of the item.

The coordinate reference system for the polygon will be the parent layer's :py:func:`QgsAnnotationLayer.crs()`.

.. seealso:: :py:func:`setGeometry`
%End

    void setGeometry( QgsCurvePolygon *geometry /Transfer/ );
%Docstring
Sets the ``geometry`` of the item.

The coordinate reference system for the polygon will be the parent layer's :py:func:`QgsAnnotationLayer.crs()`.

.. seealso:: :py:func:`geometry`
%End

    const QgsFillSymbol *symbol() const;
%Docstring
Returns the symbol used to render the item.

.. seealso:: :py:func:`setSymbol`
%End

    void setSymbol( QgsFillSymbol *symbol /Transfer/ );
%Docstring
Sets the ``symbol`` used to render the polygon item.

The item takes ownership of the symbol.

.. seealso:: :py:func:`symbol`
%End

  private:
    QgsAnnotationPolygonItem( const QgsAnnotationPolygonItem &other );
};
/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/annotations/qgsannotationpolygonitem.h                      *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/
