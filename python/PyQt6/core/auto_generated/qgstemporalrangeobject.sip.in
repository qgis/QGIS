/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/qgstemporalrangeobject.h                                    *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.py again   *
 ************************************************************************/





class QgsTemporalRangeObject
{
%Docstring(signature="appended")
Base class for objects with an associated (optional) temporal range.

.. versionadded:: 3.14
%End

%TypeHeaderCode
#include "qgstemporalrangeobject.h"
%End
  public:

    QgsTemporalRangeObject( bool enabled = false );
%Docstring
Constructor QgsTemporalRangeObject.

The ``enabled`` argument specifies whether the temporal range is initially enabled or not (see :py:func:`~QgsTemporalRangeObject.isTemporal`).
%End

    virtual ~QgsTemporalRangeObject();

    void setIsTemporal( bool enabled );
%Docstring
Sets whether the temporal range is ``enabled`` (i.e. whether the object has a temporal range
which will be considered when rendering maps with a specific time range set.)

.. seealso:: :py:func:`isTemporal`
%End

    bool isTemporal() const;
%Docstring
Returns ``True`` if the object's temporal range is enabled, and the object will be filtered when rendering maps with a specific time range set.

For map settings, if ``False`` is returned, then any other temporal settings relating to the map will be ignored during rendering.

.. seealso:: :py:func:`setIsTemporal`
%End

    void setTemporalRange( const QgsDateTimeRange &range );
%Docstring
Sets the temporal ``range`` for the object.

Calling :py:func:`~QgsTemporalRangeObject.setTemporalRange` automatically enables temporal properties on the
object (see :py:func:`~QgsTemporalRangeObject.isTemporal`), regardless of its existing state.

When a temporal ``range`` is set it can be used to filter and request time base objects.

.. seealso:: :py:func:`temporalRange`
%End

    const QgsDateTimeRange &temporalRange() const;
%Docstring
Returns the datetime range for the object.

This should only be considered when :py:func:`~QgsTemporalRangeObject.isTemporal` returns ``True``.

.. seealso:: :py:func:`setTemporalRange`
%End

};

/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/qgstemporalrangeobject.h                                    *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.py again   *
 ************************************************************************/
