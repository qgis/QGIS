/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/providers/arcgis/qgsarcgisrestutils.h                       *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/






class QgsArcGisRestContext
{
%Docstring(signature="appended")
Contains the context of a ArcGIS REST service operation.

.. seealso:: :py:class:`QgsArcGisRestUtils`

.. versionadded:: 3.28
%End

%TypeHeaderCode
#include "qgsarcgisrestutils.h"
%End
  public:

    void setTimeZone( const QTimeZone &zone );
%Docstring
Sets the time ``zone`` for datetime values.

.. seealso:: :py:func:`timeZone`
%End

    QTimeZone timeZone() const;
%Docstring
Returns the time zone for datetime values.

.. seealso:: :py:func:`setTimeZone`
%End

    void setObjectIdFieldName( const QString &name );
%Docstring
Sets the name of the objectId field.

.. seealso:: :py:func:`objectIdFieldName`
%End

    QString objectIdFieldName() const;
%Docstring
Returns the name of the objectId field.

.. seealso:: :py:func:`setObjectIdFieldName`
%End

};

class QgsArcGisRestUtils
{
%Docstring(signature="appended")
Utility functions for working with ArcGIS REST services.

.. seealso:: :py:class:`QgsArcGisPortalUtils`

.. versionadded:: 3.18
%End

%TypeHeaderCode
#include "qgsarcgisrestutils.h"
%End
  public:
    static const QMetaObject staticMetaObject;

  public:

    static QMetaType::Type convertFieldType( const QString &type );
%Docstring
Converts an ESRI REST field ``type`` to a QVariant type.
%End

    static Qgis::WkbType convertGeometryType( const QString &type );
%Docstring
Converts an ESRI REST geometry ``type`` to a WKB type.
%End

    static QgsAbstractGeometry *convertGeometry( const QVariantMap &geometry, const QString &esriGeometryType, bool hasM, bool hasZ, QgsCoordinateReferenceSystem *crs /Out/ = 0 ) /Factory/;
%Docstring
Converts an ESRI REST ``geometry`` JSON definition to a :py:class:`QgsAbstractGeometry`.

Caller takes ownership of the returned object.

:param geometry: JSON geometry definition
:param esriGeometryType: ESRI geometry type string
:param hasM: set to ``True`` to if geometry includes M values
:param hasZ: set to ``True`` to if geometry includes Z values

:return: - converted geometry
         - crs: will be set to the parsed geometry CRS
%End

    static QgsCoordinateReferenceSystem convertSpatialReference( const QVariantMap &spatialReferenceMap );
%Docstring
Converts a spatial reference JSON definition to a :py:class:`QgsCoordinateReferenceSystem` value.
%End

    static QgsSymbol *convertSymbol( const QVariantMap &definition ) /Factory/;
%Docstring
Converts a symbol JSON ``definition`` to a :py:class:`QgsSymbol`.

Caller takes ownership of the returned symbol.
%End

    static QgsFeatureRenderer *convertRenderer( const QVariantMap &rendererData ) /Factory/;
%Docstring
Converts renderer JSON ``data`` to an equivalent :py:class:`QgsFeatureRenderer`.

Caller takes ownership of the returned renderer.
%End

    static QgsAbstractVectorLayerLabeling *convertLabeling( const QVariantList &data ) /Factory/;
%Docstring
Converts labeling JSON ``data`` to an equivalent QGIS vector labeling.

Caller takes ownership of the returned object.
%End

    static QString convertLabelingExpression( const QString &string );
%Docstring
Converts an ESRI labeling expression to a QGIS expression string.
%End

    static QColor convertColor( const QVariant &data );
%Docstring
Converts ESRI JSON color data to a QColor object.
%End

    static Qt::PenStyle convertLineStyle( const QString &style );
%Docstring
Converts an ESRI line ``style`` to a Qt pen style.
%End

    static Qt::BrushStyle convertFillStyle( const QString &style );
%Docstring
Converts an ESRI fill ``style`` to a Qt brush style.
%End

    static QDateTime convertDateTime( const QVariant &value );
%Docstring
Converts a date time ``value`` to a QDateTime.
%End

    static QVariantMap geometryToJson( const QgsGeometry &geometry, const QgsArcGisRestContext &context, const QgsCoordinateReferenceSystem &crs = QgsCoordinateReferenceSystem() );
%Docstring
Converts a ``geometry`` to an ArcGIS REST JSON representation.

Returns an empty map if the geometry cannot be converted.

.. versionadded:: 3.28
%End

    static QVariantMap crsToJson( const QgsCoordinateReferenceSystem &crs );
%Docstring
Converts a ``crs`` to an ArcGIS REST JSON representation.

Returns an empty map if the ``crs`` is not valid.

.. versionadded:: 3.28
%End

    static QgsRectangle convertRectangle( const QVariant &value );
%Docstring
Converts a rectangle ``value`` to a :py:class:`QgsRectangle`.

Returns a null rectangle if the value cannot be converted.

.. versionadded:: 3.34
%End

    enum class FeatureToJsonFlag /BaseType=IntFlag/
    {
      IncludeGeometry,
      IncludeNonObjectIdAttributes,
    };

    typedef QFlags<QgsArcGisRestUtils::FeatureToJsonFlag> FeatureToJsonFlags;


    static QVariantMap featureToJson( const QgsFeature &feature,
                                      const QgsArcGisRestContext &context,
                                      const QgsCoordinateReferenceSystem &crs = QgsCoordinateReferenceSystem(),
                                      QgsArcGisRestUtils::FeatureToJsonFlags flags = QgsArcGisRestUtils::FeatureToJsonFlags( static_cast< int >( QgsArcGisRestUtils::FeatureToJsonFlag::IncludeGeometry ) | static_cast< int >( QgsArcGisRestUtils::FeatureToJsonFlag::IncludeNonObjectIdAttributes ) ) );
%Docstring
Converts a ``feature`` to an ArcGIS REST JSON representation.

.. versionadded:: 3.28
%End

    static QVariant variantToAttributeValue( const QVariant &variant, QMetaType::Type expectedType, const QgsArcGisRestContext &context );
%Docstring
Converts a variant to a REST attribute value.

.. versionadded:: 3.28
%End

    static QVariantMap fieldDefinitionToJson( const QgsField &field );
%Docstring
Converts a ``field``'s definition to an ArcGIS REST JSON representation.

.. versionadded:: 3.28
%End

    static Qgis::ArcGisRestServiceType serviceTypeFromString( const QString &type );
%Docstring
Converts a string value to a REST service type.

.. versionadded:: 3.28
%End

};

QFlags<QgsArcGisRestUtils::FeatureToJsonFlag> operator|(QgsArcGisRestUtils::FeatureToJsonFlag f1, QFlags<QgsArcGisRestUtils::FeatureToJsonFlag> f2);


/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/providers/arcgis/qgsarcgisrestutils.h                       *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/
