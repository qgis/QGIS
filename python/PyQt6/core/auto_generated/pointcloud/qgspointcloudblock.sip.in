/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/pointcloud/qgspointcloudblock.h                             *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/





class QgsPointCloudBlock
{
%Docstring(signature="appended")
Base class for storing raw data from point cloud nodes

.. note::

   The API is considered EXPERIMENTAL and can be changed without a notice

.. versionadded:: 3.18
%End

%TypeHeaderCode
#include "qgspointcloudblock.h"
%End
  public:
    QgsPointCloudBlock( int count,
                        const QgsPointCloudAttributeCollection &attributes,
                        const QByteArray &data, const QgsVector3D &scale, const QgsVector3D &offset );
%Docstring
Ctor
%End

    virtual ~QgsPointCloudBlock();

    QgsPointCloudBlock *clone() const /Factory/;
%Docstring
Clones the QgsPointCloudBlock returning a new copy.
Caller takes ownership of the returned object.

.. versionadded:: 3.36
%End

    const char *data() const;
%Docstring
Returns raw pointer to data
%End

    int pointCount() const;
%Docstring
Returns number of points that are stored in the block
%End

    int pointRecordSize() const;
%Docstring
Returns the total size of each individual point record.

.. versionadded:: 3.26
%End

    QgsPointCloudAttributeCollection attributes() const;
%Docstring
Returns the attributes that are stored in the data block, along with their size
%End

    QgsVector3D scale() const;
%Docstring
Returns the custom scale of the block.
%End

    QgsVector3D offset() const;
%Docstring
Returns the custom offset of the block.
%End

    void setPointCount( int size );
%Docstring
Changes the number of points in the block.
This is used in order to remove all points after point ``size``.
If a ``size`` larger than ``pointCount``() is used, data for the new points will be uninitialized

.. versionadded:: 3.26
%End

};


/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/pointcloud/qgspointcloudblock.h                             *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/
