/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/gps/qgsbabelformat.h                                        *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.py again   *
 ************************************************************************/




class QgsAbstractBabelFormat
{
%Docstring(signature="appended")
Abstract base class for babel GPS formats.

.. versionadded:: 3.22
%End

%TypeHeaderCode
#include "qgsbabelformat.h"
%End
  public:

    virtual ~QgsAbstractBabelFormat();

    QString name() const;
%Docstring
Returns the format's name.
%End

    Qgis::BabelFormatCapabilities capabilities() const;
%Docstring
Returns the format's capabilities.
%End

    virtual QStringList importCommand( const QString &babel,
                                       Qgis::GpsFeatureType featureType,
                                       const QString &input,
                                       const QString &output,
                                       Qgis::BabelCommandFlags flags = Qgis::BabelCommandFlags() ) const;
%Docstring
Generates a command for importing data into a GPS format using babel.

:param babel: babel path to the babel executable
:param featureType: type of GPS feature to import
:param input: input data path
:param output: output path
:param flags: optional flags to control how babel command is generated

Returns an empty list if the format does not support imports (see :py:func:`~QgsAbstractBabelFormat.capabilities`).
%End

    virtual QStringList exportCommand( const QString &babel,
                                       Qgis::GpsFeatureType featureType,
                                       const QString &input,
                                       const QString &output,
                                       Qgis::BabelCommandFlags flags = Qgis::BabelCommandFlags() ) const;
%Docstring
Generates a command for exporting GPS data into a different format using babel.

:param babel: path to the babel executable
:param featureType: type of GPS feature to export
:param input: input data path
:param output: output path
:param flags: optional flags to control how babel command is generated

Returns an empty list if the format does not support exports (see :py:func:`~QgsAbstractBabelFormat.capabilities`).
%End

  protected:

    explicit QgsAbstractBabelFormat( const QString &name = QString() );
%Docstring
Constructor for QgsAbstractBabelFormat, with the specified ``name``.
%End

    static QString featureTypeToArgument( Qgis::GpsFeatureType type );
%Docstring
Converts a GPS feature type to the equivalent babel argument.
%End


};


class QgsBabelSimpleImportFormat : QgsAbstractBabelFormat
{
%Docstring(signature="appended")
A babel format capable of converting input files to GPX files.

.. versionadded:: 3.22
%End

%TypeHeaderCode
#include "qgsbabelformat.h"
%End
  public:

    QgsBabelSimpleImportFormat( const QString &format, const QString &description, Qgis::BabelFormatCapabilities capabilities,
                                const QStringList extensions = QStringList() );
%Docstring
Constructor for QgsBabelSimpleImportFormat.

The ``format`` argument specifies the babel identifier for the input format.

The ``description`` argument specified a descriptive name for the format.

The ``capabilities`` argument must reflect whether the format is capable of handling
waypoints, routes and/or tracks.

The optional ``extensions`` argument can be used to populate a list of known file
extensions for the format (e.g. "csv", "txt").
%End

    QString description() const;
%Docstring
Returns the friendly description for the format.
%End

    QStringList extensions() const;
%Docstring
Returns the list of known extensions for the format, e.g. "csv", "txt".
%End

     virtual QStringList importCommand( const QString &babel,
                               Qgis::GpsFeatureType featureType,
                               const QString &input,
                               const QString &output,
                               Qgis::BabelCommandFlags flags = Qgis::BabelCommandFlags() ) const;
};

/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/gps/qgsbabelformat.h                                        *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.py again   *
 ************************************************************************/
