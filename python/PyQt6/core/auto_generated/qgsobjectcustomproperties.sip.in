/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/qgsobjectcustomproperties.h                                 *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/





class QgsObjectCustomProperties
{
%Docstring(signature="appended")
Simple key-value store (keys = strings, values = variants) that supports loading/saving to/from XML
in \verbatim <customproperties> \endverbatim element.
%End

%TypeHeaderCode
#include "qgsobjectcustomproperties.h"
%End
  public:

    QgsObjectCustomProperties();

    QStringList keys() const;
%Docstring
Returns a list of all stored keys.
%End

    void setValue( const QString &key, const QVariant &value );
%Docstring
Add an entry to the store with the specified ``key``.

If an entry with the same ``key`` exists already, it will be overwritten.
%End

    QVariant value( const QString &key, const QVariant &defaultValue = QVariant() ) const;
%Docstring
Returns the value for the given ``key``.

If the ``key`` is not present in the properties, the ``defaultValue`` will be returned.
%End

    void remove( const QString &key );
%Docstring
Removes a ``key`` (entry) from the store.
%End

    bool contains( const QString &key ) const;
%Docstring
Returns ``True`` if the properties contains a ``key`` with the specified name.

.. versionadded:: 3.14
%End

    void readXml( const QDomNode &parentNode, const QString &keyStartsWith = QString() );
%Docstring
Read store contents from an XML node.

:param parentNode: node to read from
:param keyStartsWith: reads only properties starting with the specified string (or all if the string is empty)

.. seealso:: :py:func:`writeXml`
%End

    void writeXml( QDomNode &parentNode, QDomDocument &doc ) const;
%Docstring
Writes the store contents to an XML node.

.. seealso:: :py:func:`readXml`
%End

  protected:

};

/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/qgsobjectcustomproperties.h                                 *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/
