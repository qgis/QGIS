/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/raster/qgsrastershaderfunction.h                            *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.py again   *
 ************************************************************************/






class QgsRasterShaderFunction
{
%Docstring(signature="appended")
The raster shade function applies a shader to a pixel at render time -
typically used to render grayscale images as false color.
%End

%TypeHeaderCode
#include "qgsrastershaderfunction.h"
#include <qgscolorrampshader.h>
%End
%ConvertToSubClassCode
    if ( dynamic_cast<QgsColorRampShader *>( sipCpp ) != NULL )
      sipType = sipType_QgsColorRampShader;
    else
      sipType = 0;
%End
  public:
    QgsRasterShaderFunction( double minimumValue = 0.0, double maximumValue = 255.0 );
    virtual ~QgsRasterShaderFunction();

    virtual void setMaximumValue( double value );
%Docstring
Sets the maximum ``value`` for the raster shader.

.. seealso:: :py:func:`setMinimumValue`

.. seealso:: :py:func:`maximumValue`
%End

    virtual void setMinimumValue( double value );
%Docstring
Sets the minimum ``value`` for the raster shader.

.. seealso:: :py:func:`setMaximumValue`

.. seealso:: :py:func:`minimumValue`
%End

    virtual bool shade( double value,
                        int *returnRedValue /Out/,
                        int *returnGreenValue /Out/,
                        int *returnBlueValue /Out/,
                        int *returnAlpha /Out/ ) const;
%Docstring
Generates an new RGBA value based on one input ``value``.

:param value: The original value to base a new RGBA value on

:return: - ``True`` if the return values are valid otherwise ``False``
         - returnRedValue: The red component of the new RGBA value
         - returnGreenValue: The green component of the new RGBA value
         - returnBlueValue: The blue component of the new RGBA value
         - returnAlpha: The alpha component of the new RGBA value
%End

    virtual bool shade( double redValue,
                        double greenValue,
                        double blueValue,
                        double alphaValue,
                        int *returnRedValue /Out/,
                        int *returnGreenValue /Out/,
                        int *returnBlueValue /Out/,
                        int *returnAlpha /Out/ ) const;
%Docstring
Generates an new RGBA value based on an original RGBA value.

:param redValue: The red component of the original value to base a new RGBA value on
:param greenValue: The green component of the original value to base a new RGBA value on
:param blueValue: The blue component of the original value to base a new RGBA value on
:param alphaValue: The alpha component of the original value to base a new RGBA value on

:return: - ``True`` if the return values are valid otherwise ``False``
         - returnRedValue: The red component of the new RGBA value
         - returnGreenValue: The green component of the new RGBA value
         - returnBlueValue: The blue component of the new RGBA value
         - returnAlpha: The alpha component of the new RGBA value
%End

    double minimumMaximumRange() const;

    double minimumValue() const;
%Docstring
Returns the maximum value for the raster shader.

.. seealso:: :py:func:`setMaximumValue`

.. seealso:: :py:func:`minimumValue`
%End

    double maximumValue() const;
%Docstring
Returns the minimum value for the raster shader.

.. seealso:: :py:func:`setMinimumValue`

.. seealso:: :py:func:`maximumValue`
%End

    virtual void legendSymbologyItems( QList< QPair< QString, QColor > > &symbolItems /Out/ ) const;
%Docstring
Returns legend symbology items if provided by renderer.
%End

    int labelPrecision() const;
%Docstring
Returns label precision

.. versionadded:: 3.16
%End

    void setLabelPrecision( int labelPrecision );
%Docstring
Sets label precision to ``labelPrecision``

.. versionadded:: 3.16
%End

  protected:




};
/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/raster/qgsrastershaderfunction.h                            *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.py again   *
 ************************************************************************/
