/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/processing/models/qgsprocessingmodelresult.h                *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.py again   *
 ************************************************************************/




class QgsProcessingModelChildAlgorithmResult
{
%Docstring(signature="appended")
Encapsulates the results of running a child algorithm within a model

.. versionadded:: 3.38
%End

%TypeHeaderCode
#include "qgsprocessingmodelresult.h"
%End
  public:

    QgsProcessingModelChildAlgorithmResult();

    Qgis::ProcessingModelChildAlgorithmExecutionStatus executionStatus() const;
%Docstring
Returns the status of executing the child algorithm.

.. seealso:: :py:func:`setExecutionStatus`
%End

    void setExecutionStatus( Qgis::ProcessingModelChildAlgorithmExecutionStatus status );
%Docstring
Sets the ``status`` of executing the child algorithm.

.. seealso:: :py:func:`executionStatus`
%End

    QVariantMap inputs() const;
%Docstring
Returns the inputs used for the child algorithm.

.. seealso:: :py:func:`setInputs`
%End

    void setInputs( const QVariantMap &inputs );
%Docstring
Sets the ``inputs`` used for the child algorithm.

.. seealso:: :py:func:`inputs`
%End

    QVariantMap outputs() const;
%Docstring
Returns the outputs generated by the child algorithm.

.. seealso:: :py:func:`setOutputs`
%End

    void setOutputs( const QVariantMap &outputs );
%Docstring
Sets the ``outputs`` generated by child algorithm.

.. seealso:: :py:func:`outputs`
%End

    QString htmlLog() const;
%Docstring
Returns the HTML formatted contents of logged messages which occurred while running the child.

.. seealso:: :py:func:`setHtmlLog`
%End

    void setHtmlLog( const QString &log );
%Docstring
Sets the HTML formatted contents of logged messages which occurred while running the child.

.. seealso:: :py:func:`htmlLog`
%End

    bool operator==( const QgsProcessingModelChildAlgorithmResult &other ) const;
    bool operator!=( const QgsProcessingModelChildAlgorithmResult &other ) const;

};

class QgsProcessingModelResult
{
%Docstring(signature="appended")
Encapsulates the results of running a Processing model

.. versionadded:: 3.38
%End

%TypeHeaderCode
#include "qgsprocessingmodelresult.h"
%End
  public:

    QgsProcessingModelResult();

    void clear();
%Docstring
Clears any existing results.
%End

    void mergeWith( const QgsProcessingModelResult &other );
%Docstring
Merges this set of results with an ``other`` set of results.

Conflicting results from ``other`` will replace results in this object.
%End

    QMap< QString, QgsProcessingModelChildAlgorithmResult > childResults() const;
%Docstring
Returns the map of child algorithm results.

Map keys refer to the child algorithm IDs.
%End





    QSet< QString > executedChildIds() const;
%Docstring
Returns the set of child algorithm IDs which were executed during the model execution.
%End

};






/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/processing/models/qgsprocessingmodelresult.h                *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.py again   *
 ************************************************************************/
