/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/elevation/qgselevationprofilemanager.h                      *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.py again   *
 ************************************************************************/




class QgsElevationProfileManager : QgsProjectStoredObjectManagerBase
{
%Docstring(signature="appended")
Manages storage of a set of elevation profiles.

:py:class:`QgsElevationProfileManager` handles the storage, serializing
and deserializing of elevation profiles. Usually this class is not
constructed directly, but rather accessed through a
:py:class:`QgsProject` via
:py:func:`QgsProject.elevationProfileManager()`.

:py:class:`QgsElevationProfileManager` retains ownership of all the
profiles contained in the manager.

.. versionadded:: 4.0
%End

%TypeHeaderCode
#include "qgselevationprofilemanager.h"
%End
  public:

    explicit QgsElevationProfileManager( QgsProject *project /TransferThis/ = 0 );
%Docstring
Constructor for QgsElevationProfileManager. The project will become the
parent object for this manager.
%End

    ~QgsElevationProfileManager();

    bool addProfile( QgsElevationProfile *profile /Transfer/ );
%Docstring
Adds a ``profile`` to the manager.

Ownership of the profile is transferred to the manager.

Returns ``True`` if the addition was successful, or ``False`` if the
profile could not be added (eg as a result of a duplicate profile name).

.. seealso:: :py:func:`removeProfile`

.. seealso:: :py:func:`profileAdded`
%End

    bool removeProfile( QgsElevationProfile *profile );
%Docstring
Removes a ``profile`` from the manager. The profile is deleted.

Returns ``True`` if the removal was successful, or ``False`` if the
removal failed (eg as a result of removing a profile which is not
contained in the manager).

.. seealso:: :py:func:`addProfile`

.. seealso:: :py:func:`profileRemoved`

.. seealso:: :py:func:`profileAboutToBeRemoved`

.. seealso:: :py:func:`clear`
%End

    void clear();
%Docstring
Removes and deletes all profiles from the manager.

.. seealso:: :py:func:`removeProfile`
%End

    QList< QgsElevationProfile * > profiles() const;
%Docstring
Returns a list of all profiles contained in the manager.
%End

    QgsElevationProfile *profileByName( const QString &name ) const;
%Docstring
Returns the profile with a matching name, or ``None`` if no matching
profiles were found.
%End

    bool readXml( const QDomElement &element, const QDomDocument &doc, const QgsReadWriteContext &context );
%Docstring
Reads the manager's state from a DOM element, restoring all profiles
present in the XML document.

.. seealso:: :py:func:`writeXml`
%End

    QDomElement writeXml( QDomDocument &doc, const QgsReadWriteContext &context ) const;
%Docstring
Returns a DOM element representing the state of the manager.

.. seealso:: :py:func:`readXml`
%End

    QString generateUniqueTitle() const;
%Docstring
Generates a unique title for a new profile, which does not clash with
any already contained by the manager.
%End

  signals:

    void profileAboutToBeAdded( const QString &name );
%Docstring
Emitted when a profile is about to be added to the manager
%End

    void profileAdded( const QString &name );
%Docstring
Emitted when a profile has been added to the manager
%End

    void profileRemoved( const QString &name );
%Docstring
Emitted when a profile was removed from the manager
%End

    void profileAboutToBeRemoved( const QString &name );
%Docstring
Emitted when a profile is about to be removed from the manager
%End

    void profileRenamed( QgsElevationProfile *profile, const QString &newName );
%Docstring
Emitted when a profile is renamed
%End

  protected:

    virtual void setupObjectConnections( QgsElevationProfile *profile );


};


/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/elevation/qgselevationprofilemanager.h                      *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.py again   *
 ************************************************************************/
