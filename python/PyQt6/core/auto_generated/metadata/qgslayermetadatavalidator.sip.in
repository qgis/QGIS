/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/metadata/qgslayermetadatavalidator.h                        *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/






class QgsAbstractMetadataBaseValidator
{
%Docstring(signature="appended")
Abstract base class for metadata validators.
%End

%TypeHeaderCode
#include "qgslayermetadatavalidator.h"
%End
  public:

    class ValidationResult
{
%Docstring(signature="appended")
Contains the parameters describing a metadata validation failure.
%End

%TypeHeaderCode
#include "qgslayermetadatavalidator.h"
%End
      public:

        ValidationResult( const QString &section, const QString &note, const QVariant &identifier = QVariant() );
%Docstring
Constructor for ValidationResult.
%End

        QString section;


        QVariant identifier() const /PyName=_identifier/;
%Docstring
Returns the optional identifier for the failed metadata item.
For instance, in list type metadata elements this
will be set to the list index of the failed metadata
item.
%End

        void setIdentifier( const QVariant &identifier );
%Docstring
Sets the optional ``identifier`` for the failed metadata item.
For instance, in list type metadata elements this
will be set to the list index of the failed metadata
item.
%End

        QString note;

    };

    virtual ~QgsAbstractMetadataBaseValidator();

    virtual bool validate( const QgsAbstractMetadataBase *metadata, QList< QgsAbstractMetadataBaseValidator::ValidationResult > &results /Out/ ) const = 0;
%Docstring
Validates a ``metadata`` object, and returns ``True`` if the
metadata is considered valid.
If validation fails, the ``results`` list will be filled with a list of
items describing why the validation failed and what needs to be rectified
to fix the metadata.
%End

};


class QgsNativeMetadataBaseValidator : QgsAbstractMetadataBaseValidator
{
%Docstring(signature="appended")
A validator for the native base QGIS metadata schema definition.

.. versionadded:: 3.2
%End

%TypeHeaderCode
#include "qgslayermetadatavalidator.h"
%End
  public:

    QgsNativeMetadataBaseValidator();

    virtual bool validate( const QgsAbstractMetadataBase *metadata, QList< QgsAbstractMetadataBaseValidator::ValidationResult > &results /Out/ ) const;


};



class QgsNativeMetadataValidator : QgsNativeMetadataBaseValidator
{
%Docstring(signature="appended")
A validator for the native QGIS layer metadata schema definition.
%End

%TypeHeaderCode
#include "qgslayermetadatavalidator.h"
%End
  public:
    QgsNativeMetadataValidator();

    virtual bool validate( const QgsAbstractMetadataBase *metadata, QList< QgsAbstractMetadataBaseValidator::ValidationResult > &results /Out/ ) const;


};


class QgsNativeProjectMetadataValidator : QgsNativeMetadataBaseValidator
{
%Docstring(signature="appended")
A validator for the native QGIS project metadata schema definition.

.. versionadded:: 3.2
%End

%TypeHeaderCode
#include "qgslayermetadatavalidator.h"
%End
  public:

    QgsNativeProjectMetadataValidator();

    virtual bool validate( const QgsAbstractMetadataBase *metadata, QList< QgsAbstractMetadataBaseValidator::ValidationResult > &results /Out/ ) const;


};

/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/metadata/qgslayermetadatavalidator.h                        *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/
