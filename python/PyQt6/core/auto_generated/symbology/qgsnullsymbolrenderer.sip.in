/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/symbology/qgsnullsymbolrenderer.h                           *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.py again   *
 ************************************************************************/



class QgsNullSymbolRenderer : QgsFeatureRenderer
{
%Docstring(signature="appended")
Null symbol renderer, which draws no symbols for features by default, but allows for labeling
and diagrams for the layer.

Selected features will also be drawn with a default symbol.
%End

%TypeHeaderCode
#include "qgsnullsymbolrenderer.h"
%End
  public:

    QgsNullSymbolRenderer();
    ~QgsNullSymbolRenderer();

    virtual QgsSymbol *symbolForFeature( const QgsFeature &feature, QgsRenderContext &context ) const;

    virtual QgsSymbol *originalSymbolForFeature( const QgsFeature &feature, QgsRenderContext &context ) const;


    virtual bool renderFeature( const QgsFeature &feature, QgsRenderContext &context, int layer = -1, bool selected = false, bool drawVertexMarker = false ) throw( QgsCsException );

    virtual void stopRender( QgsRenderContext &context );

    virtual bool willRenderFeature( const QgsFeature &feature, QgsRenderContext &context ) const;


    virtual QSet<QString> usedAttributes( const QgsRenderContext &context ) const;

    virtual QString dump() const;

    virtual QgsFeatureRenderer *clone() const /Factory/;

    virtual QgsSymbolList symbols( QgsRenderContext &context ) const;


    static QgsFeatureRenderer *create( QDomElement &element, const QgsReadWriteContext &context ) /Factory/;
%Docstring
Creates a null renderer from XML element.

:param element: DOM element
:param context: reading context

:return: new null symbol renderer
%End

    virtual QDomElement save( QDomDocument &doc, const QgsReadWriteContext &context );


    static QgsNullSymbolRenderer *convertFromRenderer( const QgsFeatureRenderer *renderer ) /Factory/;
%Docstring
Creates a QgsNullSymbolRenderer from an existing renderer.

:param renderer: renderer to convert from

:return: a new renderer if the conversion was possible, otherwise ``None``.
%End

};

/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/symbology/qgsnullsymbolrenderer.h                           *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.py again   *
 ************************************************************************/
