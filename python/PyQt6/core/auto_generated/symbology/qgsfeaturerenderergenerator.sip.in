/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/symbology/qgsfeaturerenderergenerator.h                     *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.py again   *
 ************************************************************************/




class QgsFeatureRendererGenerator
{
%Docstring(signature="appended")
An interface for objects which generate feature renderers for vector layers.

.. versionadded:: 3.18
%End

%TypeHeaderCode
#include "qgsfeaturerenderergenerator.h"
%End
  public:

    virtual ~QgsFeatureRendererGenerator();

    virtual QString id() const = 0;
%Docstring
Returns a unique ID string identifying the renderer generator.
%End

    virtual double level() const;
%Docstring
Returns a double value which dictates the stacking or z order level associated with
the returned renderer.

A value > 0 will always be rendered AFTER the normal renderer for a vector layer (i.e. the
renderer will be drawn on top of the normal feature renderer), while a value < 0 will always
be rendered BEFORE the normal renderer (i.e. the rendered features will be drawn below the
normal feature renderer).

Since a layer may potentially have multiple extra renderers created by QgsFeatureRendererGenerator
subclasses, the level will always be used to control the order that these renderers are drawn.
A renderer with a lower :py:func:`~QgsFeatureRendererGenerator.level` return value will always be drawn before those with a higher :py:func:`~QgsFeatureRendererGenerator.level`
value.

The default implementation returns 1.0, i.e. features will be rendered ABOVE the normal
vector layer renderer.

.. note::

   If two QgsFeatureRendererGenerator implementations return the same :py:func:`~QgsFeatureRendererGenerator.level` value, then their
   ordering will be unpredictable.
%End

    virtual QgsFeatureRenderer *createRenderer() const = 0 /Factory/;
%Docstring
Creates a new feature renderer to use when rendering a vector layer.

Caller takes ownership of the returned renderer.
%End
};

/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/symbology/qgsfeaturerenderergenerator.h                     *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.py again   *
 ************************************************************************/
