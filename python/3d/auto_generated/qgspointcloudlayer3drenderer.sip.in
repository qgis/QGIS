/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/3d/qgspointcloudlayer3drenderer.h                                *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.py again   *
 ************************************************************************/





class QgsPointCloudLayer3DRenderer : QgsAbstractPointCloud3DRenderer
{
%Docstring(signature="appended")
3D renderer that renders all points from a point cloud layer

.. versionadded:: 3.18
%End

%TypeHeaderCode
#include "qgspointcloudlayer3drenderer.h"
%End
  public:
    explicit QgsPointCloudLayer3DRenderer();
%Docstring
Takes ownership of the symbol object
%End

    void setLayer( QgsPointCloudLayer *layer );
%Docstring
Sets point cloud layer associated with the renderer
%End
    QgsPointCloudLayer *layer() const;
%Docstring
Returns point cloud layer associated with the renderer
%End

    virtual QString type() const;

    virtual QgsPointCloudLayer3DRenderer *clone() const /Factory/;


    void setSymbol( QgsPointCloud3DSymbol *symbol /Transfer/ );
%Docstring
Sets the 3D ``symbol`` associated with the renderer.
Ownership of ``symbol`` is transferred to the renderer.

.. seealso:: :py:func:`symbol`
%End
    const QgsPointCloud3DSymbol *symbol() const;
%Docstring
Returns 3D symbol associated with the renderer
%End

    virtual void writeXml( QDomElement &elem, const QgsReadWriteContext &context ) const;

    virtual void readXml( const QDomElement &elem, const QgsReadWriteContext &context );

    virtual void resolveReferences( const QgsProject &project );


    double maximumScreenError() const;
%Docstring
Returns the maximum screen error allowed when rendering the point cloud.

Larger values result in a faster render with less points rendered.

.. seealso:: :py:func:`setMaximumScreenError`
%End

    void setMaximumScreenError( double error );
%Docstring
Sets the maximum screen ``error`` allowed when rendering the point cloud.

Larger values result in a faster render with less points rendered.

.. seealso:: :py:func:`maximumScreenError`
%End

    bool showBoundingBoxes() const;
%Docstring
Returns whether bounding boxes will be visible when rendering the point cloud.

.. seealso:: :py:func:`setShowBoundingBoxes`
%End

    void setShowBoundingBoxes( bool showBoundingBoxes );
%Docstring
Sets whether bounding boxes will be visible when rendering the point cloud.

.. seealso:: :py:func:`showBoundingBoxes`
%End

    int pointRenderingBudget() const;
%Docstring
Returns the maximum number of points that will be rendered to the scene
%End
    void setPointRenderingBudget( int budget );
%Docstring
Sets the maximum number of points to be rendered in the scene
%End

    virtual bool convertFrom2DRenderer( QgsPointCloudRenderer *renderer );


  private:
    QgsPointCloudLayer3DRenderer( const QgsPointCloudLayer3DRenderer & );
    QgsPointCloudLayer3DRenderer &operator=( const QgsPointCloudLayer3DRenderer & );
};


/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/3d/qgspointcloudlayer3drenderer.h                                *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.py again   *
 ************************************************************************/
