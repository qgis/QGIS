/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/gui/attributetable/qgsfieldconditionalformatwidget.h             *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.py again   *
 ************************************************************************/



class QgsFieldConditionalFormatWidget : QgsPanelWidget
{
%Docstring(signature="appended")
A widget for customizing conditional formatting options.
%End

%TypeHeaderCode
#include "qgsfieldconditionalformatwidget.h"
%End
  public:

    explicit QgsFieldConditionalFormatWidget( QWidget *parent /TransferThis/ = 0 );
%Docstring
Constructor for QgsFieldConditionalFormatWidget.
%End

 void viewRules() /Deprecated/;
%Docstring
Switches the widget to the rules page.

.. deprecated:: 3.40

   No longer used, will be removed in QGIS 4.0.
%End

    void setLayer( QgsVectorLayer *layer );
%Docstring
Sets the vector ``layer`` associated with the widget.
%End


    void editStyle( int index, const QgsConditionalStyle &style );
%Docstring
Switches the widget to the edit style mode for the specified style,
where ``index`` is the index of the conditional style to edit
and ``style`` is the initial definition of the style.
%End

 void loadStyle( const QgsConditionalStyle &style ) /Deprecated/;
%Docstring

.. deprecated:: 3.40

   No longer used, use :py:class:`QgsEditConditionalFormatRuleWidget`.loadStyle instead.
%End

 void reset() /Deprecated/;
%Docstring
Resets the formatting options to their default state.

.. deprecated:: 3.40

   No longer used, will be removed in QGIS 4.0.
%End

    void setPresets( const QList<QgsConditionalStyle> &styles );
%Docstring
Sets the preset ``styles`` that can be used for quick pick.
%End

    static QList<QgsConditionalStyle> defaultPresets();
%Docstring
Returns a list of the default presets. Normally used when the widget is
created, however calling :py:func:`~QgsFieldConditionalFormatWidget.setPresets` will override the default styles.
%End

  signals:

    void rulesUpdated( const QString &fieldName );
%Docstring
Emitted when the conditional styling rules are updated.

The ``fieldName`` argument indicates the name of the field whose rules
have been modified, or an empty ``fieldName`` indicates that a row-based
rule was updated.
%End

};

class QgsEditConditionalFormatRuleWidget : QgsPanelWidget
{
%Docstring(signature="appended")
A widget for customizing an individual conditional formatting rule.

.. versionadded:: 3.10
%End

%TypeHeaderCode
#include "qgsfieldconditionalformatwidget.h"
%End
  public:

    explicit QgsEditConditionalFormatRuleWidget( QWidget *parent /TransferThis/ = 0 );
%Docstring
Constructor for :py:class:`QgsFieldConditionalFormatWidget`, with the specified ``parent`` widget.
%End

    void setLayer( QgsVectorLayer *layer );
%Docstring
Sets the vector ``layer`` associated with the widget.
%End

    void setPresets( const QList<QgsConditionalStyle> &styles );
%Docstring
Sets the preset ``styles`` that can be used for quick pick.
%End

    void loadStyle( const QgsConditionalStyle &style );
%Docstring
Sets the widget to match the settings from the specified ``style``.

.. seealso:: :py:func:`currentStyle`
%End

    QgsConditionalStyle currentStyle() const;
%Docstring
Returns the current style defined by the widget.

.. seealso:: :py:func:`loadStyle`
%End

    void setRule( const QString &rule );
%Docstring
Sets the current expression ``rule`` to show in the widget.
%End

  signals:

    void ruleSaved();
%Docstring
Emitted when a user has opted to save the current rule.
%End

    void ruleDeleted();
%Docstring
Emitted when a user has opted to deleted the current rule.
%End

    void canceled();
%Docstring
Emitted when a user has opted to cancel the rule modification.
%End

};

/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/gui/attributetable/qgsfieldconditionalformatwidget.h             *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.py again   *
 ************************************************************************/
