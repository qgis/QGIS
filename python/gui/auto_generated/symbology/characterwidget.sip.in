/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/gui/symbology/characterwidget.h                                  *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.py again   *
 ************************************************************************/






class CharacterWidget : QWidget
{
%Docstring(signature="appended")

A widget for displaying characters available in a preset font, and allowing
users to select an individual character.
%End

%TypeHeaderCode
#include "characterwidget.h"
%End
  public:

    CharacterWidget( QWidget *parent /TransferThis/ = 0 );
%Docstring
Constructor for CharacterWidget.
%End

    virtual QSize sizeHint() const;


    int columns() const;
%Docstring
Returns the number of columns of characters shown in the widget.
%End

    int squareSize() const;
%Docstring
Returns the size (in pixels) of the square used to render each character preview.
%End

    QChar character() const;
%Docstring
Returns the currently selected character in the widget.

.. seealso:: :py:func:`setCharacter`
%End

    QFont font() const;
%Docstring
Returns the font shown in the widget

.. seealso:: :py:func:`setFont`
%End

  public slots:

    void setFont( const QFont &font );
%Docstring
Sets the ``font`` to show in the widget.

.. seealso:: :py:func:`font`
%End

    void setFontSize( double fontSize );
%Docstring
Sets the font size (in points) to render in the widget.
%End

    void setFontStyle( const QString &fontStyle );
%Docstring
Sets the font style to show in the widget.
%End

    void updateFontMerging( bool enable );

    void setColumns( int columns );
%Docstring
Sets the number of columns of characters to show in the widget.
%End

    void setCharacter( QChar character );
%Docstring
Sets the currently selected ``character`` in the widget.

.. seealso:: :py:func:`character`

.. seealso:: :py:func:`characterSelected`
%End

    void clearCharacter();
%Docstring
Clears the currently selected character in the widget.

.. seealso:: :py:func:`character`

.. seealso:: :py:func:`setCharacter`
%End

  signals:

    void characterSelected( QChar character );
%Docstring
Emitted when a character is selected in the widget.
%End

  protected:
    virtual void keyPressEvent( QKeyEvent *event );

    virtual void mouseMoveEvent( QMouseEvent *event );

    virtual void mousePressEvent( QMouseEvent *event );

    virtual void paintEvent( QPaintEvent *event );

    virtual void resizeEvent( QResizeEvent *event );


};

/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/gui/symbology/characterwidget.h                                  *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.py again   *
 ************************************************************************/
