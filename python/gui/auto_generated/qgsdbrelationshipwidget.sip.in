/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/gui/qgsdbrelationshipwidget.h                                    *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.py again   *
 ************************************************************************/



class QgsDbRelationWidget : QWidget
{
%Docstring(signature="appended")
A widget for configuration of the properties of a relationship in a database.

.. versionadded:: 3.30
%End

%TypeHeaderCode
#include "qgsdbrelationshipwidget.h"
%End
  public:

    QgsDbRelationWidget( QgsAbstractDatabaseProviderConnection *connection /Transfer/, QWidget *parent /TransferThis/ = 0 );
%Docstring
Constructor for QgsDbRelationWidget with the specified ``parent`` widget, for the specified ``connection``.

Ownership of ``connection`` is transferred to the widget.
%End

    void setRelationship( const QgsWeakRelation &relationship );
%Docstring
Sets the current ``relationship`` to show properties for in the widget.

.. seealso:: :py:func:`relationship`
%End

    QgsWeakRelation relationship() const;
%Docstring
Returns the relationship as defined in the widget.

.. seealso:: :py:func:`setRelationship`
%End

    bool isValid() const;
%Docstring
Returns ``True`` if the widget currently represents a valid relationship configuration.

.. seealso:: :py:func:`validityChanged`
%End

  signals:

    void validityChanged( bool isValid );
%Docstring
Emitted whenever the validity of the relationship configuration in the widget changes.

.. seealso:: :py:func:`isValid`
%End

};



class QgsDbRelationDialog: QDialog
{
%Docstring(signature="appended")
A dialog for configuration of the properties of a relationship in a database.

.. versionadded:: 3.30
%End

%TypeHeaderCode
#include "qgsdbrelationshipwidget.h"
%End
  public:

    explicit QgsDbRelationDialog( QgsAbstractDatabaseProviderConnection *connection /Transfer/, QWidget *parent /TransferThis/ = 0, Qt::WindowFlags flags = Qt::WindowFlags() );
%Docstring
Constructor for QgsDbRelationDialog, with the specified ``parent`` widget and window ``flags``, for the specified ``connection``.

Ownership of ``connection`` is transferred to the widget.
%End

    void setRelationship( const QgsWeakRelation &relationship );
%Docstring
Sets the current ``relationship`` to show properties for in the dialog.

.. seealso:: :py:func:`relationship`
%End

    QgsWeakRelation relationship() const;
%Docstring
Returns the relationship as defined in the dialog.

.. seealso:: :py:func:`setRelationship`
%End

  public slots:

    virtual void accept();


};

/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/gui/qgsdbrelationshipwidget.h                                    *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.py again   *
 ************************************************************************/
