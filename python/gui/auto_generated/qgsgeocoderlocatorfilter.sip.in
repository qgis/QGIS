/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/gui/qgsgeocoderlocatorfilter.h                                   *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.py again   *
 ************************************************************************/




class QgsGeocoderLocatorFilter : QgsAbstractGeocoderLocatorFilter
{
%Docstring(signature="appended")
An adapter class which implements a locator filter populated from a :py:class:`QgsGeocoderInterface`.

This class implements the required logic to bridge a class which implements the
:py:class:`QgsGeocoderInterface` interface to a :py:class:`QgsLocatorFilter`. It allows easy creation of a locator
filter from a geocoder.

.. versionadded:: 3.18
%End

%TypeHeaderCode
#include "qgsgeocoderlocatorfilter.h"
%End
  public:

    QgsGeocoderLocatorFilter( const QString &name, const QString &displayName,
                              const QString &prefix,
                              QgsGeocoderInterface *geocoder,
                              QgsMapCanvas *canvas,
                              const QgsRectangle &boundingBox = QgsRectangle() );
%Docstring
Constructor for QgsGeocoderLocatorFilter.

The ``name`` argument specifies a unique name for the filter. This should be
an untranslated string identifying the filter.

The ``displayName`` argument must specify a translated, user-friendly name for the filter.

The ``prefix`` argument specifies the prefix character(s) for this filter. Prefixing a search
with these characters will restrict the locator search to only include results from this filter.
The ``prefix`` must consist of at least three characters.

The ``geocoder`` must specify an instance of a class which implements the :py:class:`QgsGeocoderInterface`
interface. Ownership of ``geocoder`` is not transferred, and the caller must ensure that ``geocoder``
exists for the lifetime of this filter.

The ``boundingBox`` argument specifies the geographic bounding box, in WGS84, covered by the
filter.
%End

    virtual QgsLocatorFilter *clone() const /Factory/;


};

/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/gui/qgsgeocoderlocatorfilter.h                                   *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.py again   *
 ************************************************************************/
