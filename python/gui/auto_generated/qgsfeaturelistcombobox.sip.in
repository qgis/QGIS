/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/gui/qgsfeaturelistcombobox.h                                     *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/




class QgsFeatureListComboBox : QComboBox
{
%Docstring(signature="appended")
This offers a combobox with autocompleter that allows selecting features from a layer.

It will show up to 100 entries at a time. The entries can be chosen based on the displayExpression
and whenever text is typed into the combobox, the completer and popup will adjust to features matching the typed text.
%End

%TypeHeaderCode
#include "qgsfeaturelistcombobox.h"
%End
  public:

    QgsFeatureListComboBox( QWidget *parent = 0 );
%Docstring
Create a new QgsFeatureListComboBox, optionally specifying a ``parent``.
%End

    QgsVectorLayer *sourceLayer() const;
%Docstring
The layer from which features should be listed.
%End

    void setSourceLayer( QgsVectorLayer *sourceLayer );
%Docstring
The layer from which features should be listed.
%End

    void setCurrentFeature( const QgsFeature &feature );
%Docstring
Sets the current index by using the given feature

.. versionadded:: 3.10
%End

    QString displayExpression() const;
%Docstring
The display expression will be used to display features as well as
the value to match the typed text against.
%End

    void setDisplayExpression( const QString &displayExpression );
%Docstring
The display expression will be used to display features as well as
the value to match the typed text against.
%End

    QString filterExpression() const;
%Docstring
An additional expression to further restrict the available features.
This can be used to integrate additional spatial or other constraints.
%End

    int nullIndex() const;
%Docstring
Returns the current index of the NULL value, or -1 if NULL values are
not allowed.

.. versionadded:: 3.2
%End

    void setFilterExpression( const QString &filterExpression );
%Docstring
An additional expression to further restrict the available features.
This can be used to integrate additional spatial or other constraints.
%End

 QVariant identifierValue() const /Deprecated/;
%Docstring
The identifier value of the currently selected feature. A value from the
identifierField.

.. deprecated:: QGIS 3.10
%End

    QVariantList identifierValues() const;
%Docstring
The identifier values of the currently selected feature. A value from the
identifierField.

.. versionadded:: 3.10
%End


 void setIdentifierValue( const QVariant &identifierValue ) /Deprecated/;
%Docstring
The identifier value of the currently selected feature. A value from the
identifierField.

.. deprecated:: QGIS 3.10
   use setIdentifierValues
%End

    void setIdentifierValues( const QVariantList &identifierValues );
%Docstring
The identifier values of the currently selected feature. A value from the
identifierFields.

.. versionadded:: 3.10
%End

    void setIdentifierValuesToNull();
%Docstring
Sets the identifier values of the currently selected feature to NULL value(s).

.. versionadded:: 3.10
%End

    QgsFeatureRequest currentFeatureRequest() const;
%Docstring
Shorthand for getting a feature request to query the currently selected
feature.
%End

    bool allowNull() const;
%Docstring
Determines if a NULL value should be available in the list.
%End

    void setAllowNull( bool allowNull );
%Docstring
Determines if a NULL value should be available in the list.
%End

    int fetchLimit() const;
%Docstring
Returns the feature request fetch limit

.. versionadded:: 3.32
%End

    void setFetchLimit( int fetchLimit );
%Docstring
Defines the feature request fetch limit
If set to 0, no limit is applied when fetching

.. versionadded:: 3.32
%End

 QString identifierField() const /Deprecated/;
%Docstring
Field name that will be used to uniquely identify the current feature.
Normally the primary key of the layer.

.. deprecated:: QGIS 3.10
%End

    QStringList identifierFields() const;
%Docstring
Field name that will be used to uniquely identify the current feature.
Normally the primary key of the layer.

.. versionadded:: 3.10
%End

 void setIdentifierField( const QString &identifierField ) /Deprecated/;
%Docstring
Field name that will be used to uniquely identify the current feature.
Normally the primary key of the layer.

.. deprecated:: QGIS 3.10
%End

    void setIdentifierFields( const QStringList &identifierFields );
%Docstring
Field name that will be used to uniquely identify the current feature.
Normally the primary key of the layer.

.. versionadded:: 3.10
%End

    QModelIndex currentModelIndex() const;
%Docstring
The index of the currently selected item.
%End

    virtual void focusOutEvent( QFocusEvent *event );


    virtual void keyPressEvent( QKeyEvent *event );


  signals:

    void modelUpdated();
%Docstring
The underlying model has been updated.

.. versionadded:: 3.2
%End

    void sourceLayerChanged();
%Docstring
The layer from which features should be listed.
%End

    void displayExpressionChanged();
%Docstring
The display expression will be used to display features as well as
the the value to match the typed text against.
%End

    void filterExpressionChanged();
%Docstring
An additional expression to further restrict the available features.
This can be used to integrate additional spatial or other constraints.
%End

    void identifierValueChanged();
%Docstring
The identifier value of the currently selected feature. A value from the
identifierField.
%End

    void identifierFieldChanged();
%Docstring
Field name that will be used to uniquely identify the current feature.
Normally the primary key of the layer.
%End

    void allowNullChanged();
%Docstring
Determines if a NULL value should be available in the list.
%End

    void currentFeatureChanged();
%Docstring
Emitted when the current feature changes

.. versionadded:: 3.16.5
%End

    void currentFeatureFoundChanged( bool found );
%Docstring
Emitted when the feature picker model changes its feature ``found`` state

.. versionadded:: 3.38
%End

};



/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/gui/qgsfeaturelistcombobox.h                                     *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/
