/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/raster/qgsraster.h                                          *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.py again   *
 ************************************************************************/





class QgsRaster
{
%Docstring(signature="appended")
Raster namespace.
%End

%TypeHeaderCode
#include "qgsraster.h"
%End
  public:


    static double representableValue( double value, Qgis::DataType dataType );
%Docstring
Gets value representable by given data type.
Supported are numerical types Byte, Int8, UInt16, Int16, UInt32, Int32, Float32, Float64.
This is done through C casting, so you have to be sure that the provided value is
representable in the output data type. This can be checked with :py:func:`~QgsRaster.isRepresentableValue`.

:param value:
:param dataType:
%End
};



/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/raster/qgsraster.h                                          *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.py again   *
 ************************************************************************/
