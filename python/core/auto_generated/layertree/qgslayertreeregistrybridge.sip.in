/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/layertree/qgslayertreeregistrybridge.h                      *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.py again   *
 ************************************************************************/






class QgsLayerTreeRegistryBridge : QObject
{
%Docstring(signature="appended")
Listens to the updates in map layer registry and does changes in layer tree.

When connected to a layer tree, any layers added to the map layer registry
will be also added to the layer tree. Similarly, map layers that are removed
from registry will be removed from the layer tree.

If a layer is completely removed from the layer tree, it will be also removed
from the map layer registry.
%End

%TypeHeaderCode
#include "qgslayertreeregistrybridge.h"
%End
  public:

    struct InsertionPoint
    {
      InsertionPoint( QgsLayerTreeGroup *group, int position );
%Docstring
Constructs an insertion point as layer tree group with its corresponding position.
%End
      QgsLayerTreeGroup *group;
      int position;
    };

    explicit QgsLayerTreeRegistryBridge( QgsLayerTreeGroup *root, QgsProject *project, QObject *parent /TransferThis/ = 0 );
%Docstring
Create the instance that synchronizes given project with a layer tree root
%End

    void setEnabled( bool enabled );
    bool isEnabled() const;

    void setNewLayersVisible( bool enabled );
    bool newLayersVisible() const;

 void setLayerInsertionPoint( QgsLayerTreeGroup *parentGroup, int index ) /Deprecated/;
%Docstring
Set where the new layers should be inserted - can be used to follow current selection.
By default it is root group with zero index.

.. deprecated:: 3.10

   Use setLayerInsertionPoint( const InsertionPoint &insertionPoint ) instead.
%End

    void setLayerInsertionPoint( const InsertionPoint &insertionPoint );
%Docstring
Set where the new layers should be inserted - can be used to follow current selection.
By default it is root group with zero index.

.. versionadded:: 3.10
%End

    void setLayerInsertionMethod( Qgis::LayerTreeInsertionMethod method );
%Docstring
Sets the insertion ``method`` used to add layers to the tree

.. versionadded:: 3.30
%End

    Qgis::LayerTreeInsertionMethod layerInsertionMethod() const;
%Docstring
Returns the insertion method used to add layers to the tree

.. versionadded:: 3.30
%End

  signals:

    void addedLayersToLayerTree( const QList<QgsMapLayer *> &layers );
%Docstring
Tell others we have just added layers to the tree (used in QGIS to auto-select first newly added layer)
%End

  protected slots:
    void layersAdded( const QList<QgsMapLayer *> &layers );
    void layersWillBeRemoved( const QStringList &layerIds );

    void groupWillRemoveChildren( QgsLayerTreeNode *node, int indexFrom, int indexTo );
    void groupRemovedChildren();

    void removeLayersFromRegistry( const QStringList &layerIds );

  protected:

};

/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/layertree/qgslayertreeregistrybridge.h                      *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.py again   *
 ************************************************************************/
