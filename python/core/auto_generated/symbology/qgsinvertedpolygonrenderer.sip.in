/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/symbology/qgsinvertedpolygonrenderer.h                      *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.py again   *
 ************************************************************************/


class QgsInvertedPolygonRenderer : QgsMergedFeatureRenderer
{
%Docstring(signature="appended")
A polygon-only feature renderer used to display features inverted.

The exterior of the polygon is turned to an interior and where the
exterior theoretically spans the entire plane, allowing to mask the
surroundings of some features.

It is designed on top of another feature renderer, which is called
"embedded" Most of the methods are then only proxies to the embedded
renderer.

Features are collected to form one "inverted" polygon during
:py:func:`~renderFeature` and rendered on :py:func:`~stopRender`.
%End

%TypeHeaderCode
#include "qgsinvertedpolygonrenderer.h"
%End
  public:

    QgsInvertedPolygonRenderer( QgsFeatureRenderer *embeddedRenderer /Transfer/ = 0 );
%Docstring
Constructor

:param embeddedRenderer: optional embeddedRenderer. If ``None``, a
                         default one will be assigned. Ownership will be
                         transferred.
%End


    virtual QgsInvertedPolygonRenderer *clone() const /Factory/;


    virtual QString dump() const;


    static QgsFeatureRenderer *create( QDomElement &element, const QgsReadWriteContext &context ) /Factory/;
%Docstring
Creates a renderer out of an XML, for loading
%End

    virtual QDomElement save( QDomDocument &doc, const QgsReadWriteContext &context );


    bool preprocessingEnabled() const;
%Docstring
Returns ``True`` if the geometries are to be preprocessed (merged with
an union) before rendering.

.. seealso:: :py:func:`setPreprocessingEnabled`
%End

    void setPreprocessingEnabled( bool enabled );
%Docstring
Sets whether geometries preprocessing is enabled.

When enabled, geometries will be merged with an union before being
rendered.

This allows fixing some rendering artifacts (when rendering overlapping
polygons for instance). This will involve some CPU-demanding
computations and is thus disabled by default.

.. seealso:: :py:func:`preprocessingEnabled`
%End

    static QgsInvertedPolygonRenderer *convertFromRenderer( const QgsFeatureRenderer *renderer ) /Factory/;
%Docstring
Creates a QgsInvertedPolygonRenderer by a conversion from an existing
renderer.

:return: a new renderer if the conversion was possible, otherwise
         ``None``.
%End

};


/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/symbology/qgsinvertedpolygonrenderer.h                      *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.py again   *
 ************************************************************************/
