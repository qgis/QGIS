/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/geometry/qgsmultisurface.h                                  *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/





class QgsMultiSurface: QgsGeometryCollection
{
%Docstring(signature="appended")
Multi surface geometry collection.
%End

%TypeHeaderCode
#include "qgsmultisurface.h"
%End
  public:

    QgsMultiSurface() /HoldGIL/;
%Docstring
Constructor for an empty multisurface geometry.
%End


    SIP_PYOBJECT surfaceN( int index ) /TypeHint="QgsSurface"/;
%Docstring
Returns the surface with the specified ``index``.

:raises IndexError: if no surface with the specified index exists.

.. versionadded:: 3.16
%End
%MethodCode
    if ( a0 < 0 || a0 >= sipCpp->numGeometries() )
    {
      PyErr_SetString( PyExc_IndexError, QByteArray::number( a0 ) );
      sipIsErr = 1;
    }
    else
    {
      return sipConvertFromType( sipCpp->surfaceN( a0 ), sipType_QgsSurface, NULL );
    }
%End


    virtual QString geometryType() const /HoldGIL/;

    virtual void clear();

    virtual QgsMultiSurface *clone() const /Factory/;

    virtual QgsMultiSurface *toCurveType() const /Factory/;

    virtual bool fromWkt( const QString &wkt );

    virtual QDomElement asGml2( QDomDocument &doc, int precision = 17, const QString &ns = "gml", QgsAbstractGeometry::AxisOrder axisOrder = QgsAbstractGeometry::AxisOrder::XY ) const;

    virtual QDomElement asGml3( QDomDocument &doc, int precision = 17, const QString &ns = "gml", QgsAbstractGeometry::AxisOrder axisOrder = QgsAbstractGeometry::AxisOrder::XY ) const;

    virtual bool addGeometry( QgsAbstractGeometry *g /Transfer/ );

    virtual bool addGeometries( const QVector< QgsAbstractGeometry * > &geometries /Transfer/ );

    virtual bool insertGeometry( QgsAbstractGeometry *g /Transfer/, int index );

    virtual QgsAbstractGeometry *boundary() const /Factory/;

    virtual QgsMultiSurface *simplifyByDistance( double tolerance ) const /Factory/;



    virtual QgsMultiSurface *createEmptyWithSameType() const /Factory/;


};


/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/geometry/qgsmultisurface.h                                  *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/
