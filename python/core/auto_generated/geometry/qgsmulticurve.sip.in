/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/geometry/qgsmulticurve.h                                    *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/



class QgsMultiCurve: QgsGeometryCollection
{
%Docstring(signature="appended")
Multi curve geometry collection.
%End

%TypeHeaderCode
#include "qgsmulticurve.h"
%End
  public:
    QgsMultiCurve();



    SIP_PYOBJECT curveN( int index ) /TypeHint="QgsCurve"/;
%Docstring
Returns the curve with the specified ``index``.

:raises IndexError: if no curve with the specified index exists.

.. versionadded:: 3.16
%End
%MethodCode
    if ( a0 < 0 || a0 >= sipCpp->numGeometries() )
    {
      PyErr_SetString( PyExc_IndexError, QByteArray::number( a0 ) );
      sipIsErr = 1;
    }
    else
    {
      return sipConvertFromType( sipCpp->curveN( a0 ), sipType_QgsCurve, NULL );
    }
%End


    virtual QString geometryType() const /HoldGIL/;

    virtual QgsMultiCurve *clone() const /Factory/;

    virtual void clear();

    virtual QgsMultiCurve *toCurveType() const /Factory/;

    virtual bool fromWkt( const QString &wkt );

    virtual QDomElement asGml2( QDomDocument &doc, int precision = 17, const QString &ns = "gml", QgsAbstractGeometry::AxisOrder axisOrder = QgsAbstractGeometry::AxisOrder::XY ) const;

    virtual QDomElement asGml3( QDomDocument &doc, int precision = 17, const QString &ns = "gml", QgsAbstractGeometry::AxisOrder axisOrder = QgsAbstractGeometry::AxisOrder::XY ) const;

    virtual bool addGeometry( QgsAbstractGeometry *g /Transfer/ );

    virtual bool addGeometries( const QVector< QgsAbstractGeometry * > &geometries /Transfer/ );

    virtual bool insertGeometry( QgsAbstractGeometry *g /Transfer/, int index );


    QgsMultiCurve *reversed() const /Factory/;
%Docstring
Returns a copy of the multi curve, where each component curve has had its line direction reversed.
%End

    virtual QgsAbstractGeometry *boundary() const /Factory/;



    virtual QgsMultiCurve *createEmptyWithSameType() const /Factory/;


    SIP_PYOBJECT __repr__();
%MethodCode
    QString wkt = sipCpp->asWkt();
    if ( wkt.length() > 1000 )
      wkt = wkt.left( 1000 ) + QStringLiteral( "..." );
    QString str = QStringLiteral( "<QgsMultiCurve: %1>" ).arg( wkt );
    sipRes = PyUnicode_FromString( str.toUtf8().constData() );
%End

};


/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/geometry/qgsmulticurve.h                                    *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/
