/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/proj/qgsdatumtransform.h                                    *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.py again   *
 ************************************************************************/





class QgsDatumTransform
{
%Docstring(signature="appended")
Contains methods and classes relating the datum transformations.

.. seealso:: :py:class:`QgsCoordinateTransformContext`

.. seealso:: :py:class:`QgsCoordinateTransform`
%End

%TypeHeaderCode
#include "qgsdatumtransform.h"
%End
  public:

    struct TransformPair
    {

      TransformPair( int sourceTransformId = -1, int destinationTransformId = -1 );
%Docstring
Constructor for a TransformPair with the specified ``sourceTransformId``
and ``destinationTransformId`` transforms.
%End

      int sourceTransformId;

      int destinationTransformId;

      bool operator==( QgsDatumTransform::TransformPair other ) const;

      bool operator!=( QgsDatumTransform::TransformPair other ) const;

    };

    struct TransformInfo
    {
      int datumTransformId;

      int epsgCode;

      QString sourceCrsAuthId;

      QString destinationCrsAuthId;

      QString sourceCrsDescription;

      QString destinationCrsDescription;

      QString remarks;

      QString scope;

      bool preferred;

      bool deprecated;

    };


    struct GridDetails
    {
      QString shortName;
      QString fullName;
      QString packageName;
      QString url;
      bool directDownload;
      bool openLicense;
      bool isAvailable;
    };

    struct SingleOperationDetails
    {
      QString scope;

      QString remarks;

      QString areaOfUse;

      QString authority;

      QString code;
    };

    struct TransformDetails
    {
      QString proj;
      QString name;
      double accuracy;

      QString authority;

      QString code;

      QString scope;

      QString remarks;

      bool isAvailable;

      QString areaOfUse;

      QgsRectangle bounds;

      QList< QgsDatumTransform::GridDetails > grids;

      QList< QgsDatumTransform::SingleOperationDetails > operationDetails;
    };

    static QList< QgsDatumTransform::TransformDetails > operations( const QgsCoordinateReferenceSystem &source, const QgsCoordinateReferenceSystem &destination, bool includeSuperseded = false );
%Docstring
Returns a list of coordinate operations available for transforming
coordinates from the ``source`` to ``destination`` CRS.

This list is sorted in order of preference, with the most preferable
operation listed first.

Not all operations may be available for use. Check QgsDatumTransform.TransformDetails.isAvailable
first. Operations may require grid shift files which are not available on the local
install.

If ``includeSuperseded`` is ``True``, superseded (but not deprecated) transforms will be included
in the results. This requires Proj >= 6.2.

.. note::

   Requires Proj 6.0 or later. Builds based on earlier Proj versions will always return an empty list,
   and the deprecated API from QgsDatumTransform must be used instead.

.. versionadded:: 3.8
%End

 static QList< QgsDatumTransform::TransformPair > datumTransformations( const QgsCoordinateReferenceSystem &source, const QgsCoordinateReferenceSystem &destination ) /Deprecated/;
%Docstring
Returns a list of datum transformations which are available for the given ``source`` and ``destination`` CRS.

.. seealso:: :py:func:`datumTransformToProj`

.. seealso:: :py:func:`datumTransformInfo`

.. deprecated:: 3.40

   Not used for builds based on Proj >= 6.0.
%End

 static QString datumTransformToProj( int datumTransformId ) /Deprecated/;
%Docstring
Returns a proj string representing the specified ``datumTransformId`` datum transform ID.

.. seealso:: :py:func:`datumTransformations`

.. seealso:: :py:func:`datumTransformInfo`

.. seealso:: :py:func:`projStringToDatumTransformId`

.. deprecated:: 3.40

   Not used for builds based on Proj >= 6.0.
%End

 static int projStringToDatumTransformId( const QString &string ) /Deprecated/;
%Docstring
Returns the datum transform ID corresponding to a specified proj ``string``.
Returns -1 if matching datum ID was not found.

.. seealso:: :py:func:`datumTransformToProj`

.. deprecated:: 3.40

   Not used for builds based on Proj >= 6.0.
%End

 static QgsDatumTransform::TransformInfo datumTransformInfo( int datumTransformId ) /Deprecated/;
%Docstring
Returns detailed information about the specified ``datumTransformId``.
If ``datumTransformId`` was not a valid transform ID, a TransformInfo with TransformInfo.datumTransformId of
-1 will be returned.

.. seealso:: :py:func:`datumTransformations`

.. seealso:: :py:func:`datumTransformToProj`

.. deprecated:: 3.40

   Not used for builds based on Proj >= 6.0.
%End


};

/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/proj/qgsdatumtransform.h                                    *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.py again   *
 ************************************************************************/
