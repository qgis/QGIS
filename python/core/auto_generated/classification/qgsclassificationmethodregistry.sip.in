/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/classification/qgsclassificationmethodregistry.h            *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.py again   *
 ************************************************************************/







class QgsClassificationMethodRegistry
{
%Docstring(signature="appended")
This class manages all known classification methods

:py:class:`QgsClassificationMethodRegistry` is not usually directly created, but rather accessed through
:py:func:`QgsApplication.classificationMethodRegistry()`.

.. versionadded:: 3.10
%End

%TypeHeaderCode
#include "qgsclassificationmethodregistry.h"
%End
  public:
    QgsClassificationMethodRegistry();
    ~QgsClassificationMethodRegistry();

    bool addMethod( QgsClassificationMethod *method /Transfer/ );
%Docstring
Adds a method to the registry
Returns ``False`` if a method with same id already exists.
%End

    QgsClassificationMethod *method( const QString &id ) /Factory/;
%Docstring
Returns a new instance of the method for the given id
%End

    QMap<QString, QString> methodNames() const;
%Docstring
Returns a map <name, id> of all registered methods.
%End

    QIcon icon( const QString &id ) const;
%Docstring
Returns the icon for a given method id
%End

};

/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/classification/qgsclassificationmethodregistry.h            *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.py again   *
 ************************************************************************/
