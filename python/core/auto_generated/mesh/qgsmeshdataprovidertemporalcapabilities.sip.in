/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/mesh/qgsmeshdataprovidertemporalcapabilities.h              *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.py again   *
 ************************************************************************/





class QgsMeshDataProviderTemporalCapabilities: QgsDataProviderTemporalCapabilities
{
%Docstring(signature="appended")
Class for handling properties relating to a mesh data provider's temporal capabilities.

.. versionadded:: 3.14
%End

%TypeHeaderCode
#include "qgsmeshdataprovidertemporalcapabilities.h"
%End
  public:

    enum MatchingTemporalDatasetMethod
    {
      FindClosestDatasetBeforeStartRangeTime,
      FindClosestDatasetFromStartRangeTime
    };

    QgsMeshDataProviderTemporalCapabilities();
%Docstring
Constructor for QgsMeshDataProviderTemporalCapabilities
%End

    QgsMeshDatasetIndex datasetIndexClosestBeforeRelativeTime( int group, qint64 timeSinceGlobalReference ) const;
%Docstring
Returns the last dataset with time less than or equal to ``timeSinceGlobalReference``

Returns invalid dataset index if ``timeSinceGlobalReference`` is outside the time extent of the dataset group

.. note::

   for non temporal dataset group, ``timeSinceGlobalReference`` is not used and the unique dataset is returned
%End

    QgsMeshDatasetIndex datasetIndexClosestFromRelativeTime( int group, qint64 timeSinceGlobalReference ) const;
%Docstring
Returns the closest dataset index from the ``timeSinceGlobalReference``

Returns invalid dataset index if ``timeSinceGlobalReference`` is outside the time extent of the dataset group

.. note::

   for non temporal dataset group, ``timeSinceGlobalReference`` is not used and the unique dataset is returned
%End




    bool hasReferenceTime() const;
%Docstring
Returns whether the reference time is set
%End

    QDateTime referenceTime() const;
%Docstring
Returns the reference time
%End

    QgsDateTimeRange timeExtent() const;
%Docstring
Returns the time extent using the internal reference time
and the first and last times available from the all the dataset
%End

    QgsDateTimeRange timeExtent( const QDateTime &reference ) const;
%Docstring
Returns the time extent using an external ``reference`` date time
and the first and last times available from the all the dataset
%End

    void setTemporalUnit( Qgis::TemporalUnit temporalUnit );
%Docstring
Sets the temporal unit (``temporalUnit``) used to read data by the data provider

Temporal units supported are milliseconds, seconds, minutes, hors, days and weeks
%End

    Qgis::TemporalUnit temporalUnit() const;
%Docstring
Returns the temporal unit used to read data by the data provider
%End

    qint64 datasetTime( const QgsMeshDatasetIndex &index ) const;
%Docstring
Returns the relative time in milliseconds of the dataset
%End

    void clear();
%Docstring
Clears all stored reference times and dataset times
%End

    qint64 firstTimeStepDuration( int group ) const;
%Docstring
Returns the duration of the first time step of the dataset group with index ``group``

The value is -1 if the dataset group is not present or if it contains only one dataset (non temporal dataset)
%End

};

/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/mesh/qgsmeshdataprovidertemporalcapabilities.h              *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.py again   *
 ************************************************************************/
